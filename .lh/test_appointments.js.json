{
    "sourceFile": "test_appointments.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1718035535577,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1718037779629,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,17 +1,18 @@\n const axios = require('axios');\n require('dotenv').config();\n \n const apiUrl = process.env.TEKMETRIC_API_URL;\n-const authToken = 'your_token_here'; // Replace with the actual token\n+const authToken = process.env.TEKMETRIC_API_KEY; // Use the actual token\n \n async function testAppointments() {\n     try {\n         const response = await axios.get(`${apiUrl}/appointments`, {\n             headers: {\n                 'Authorization': `Bearer ${authToken}`,\n                 'Content-Type': 'application/json'\n-            }\n+            },\n+            params: { shop: 238 }\n         });\n         console.log('Appointments:', response.data);\n     } catch (error) {\n         console.error('Error fetching appointments:', error.response ? error.response.data : error.message);\n"
                }
            ],
            "date": 1718035535577,
            "name": "Commit-0",
            "content": "const axios = require('axios');\nrequire('dotenv').config();\n\nconst apiUrl = process.env.TEKMETRIC_API_URL;\nconst authToken = 'your_token_here'; // Replace with the actual token\n\nasync function testAppointments() {\n    try {\n        const response = await axios.get(`${apiUrl}/appointments`, {\n            headers: {\n                'Authorization': `Bearer ${authToken}`,\n                'Content-Type': 'application/json'\n            }\n        });\n        console.log('Appointments:', response.data);\n    } catch (error) {\n        console.error('Error fetching appointments:', error.response ? error.response.data : error.message);\n    }\n}\n\ntestAppointments();\n"
        }
    ]
}