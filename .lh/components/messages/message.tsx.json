{
    "sourceFile": "components/messages/message.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 12,
            "patches": [
                {
                    "date": 1717794800232,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1717795726630,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,40 +1,40 @@\n-import { useChatHandler } from \"@/components/chat/chat-hooks/use-chat-handler\"\n-import { ChatbotUIContext } from \"@/context/context\"\n-import { LLM_LIST } from \"@/lib/models/llm/llm-list\"\n-import { cn } from \"@/lib/utils\"\n-import { Tables } from \"@/supabase/types\"\n-import { LLM, LLMID, MessageImage, ModelProvider } from \"@/types\"\n+import { useChatHandler } from \"@/components/chat/chat-hooks/use-chat-handler\";\n+import { ChatbotUIContext } from \"@/context/context\";\n+import { LLM_LIST } from \"@/lib/models/llm/llm-list\";\n+import { cn } from \"@/lib/utils\";\n+import { Tables } from \"@/supabase/types\";\n+import { LLM, LLMID, MessageImage, ModelProvider } from \"@/types\";\n import {\n   IconBolt,\n   IconCaretDownFilled,\n   IconCaretRightFilled,\n   IconCircleFilled,\n   IconFileText,\n   IconMoodSmile,\n-  IconPencil\n-} from \"@tabler/icons-react\"\n-import Image from \"next/image\"\n-import { FC, useContext, useEffect, useRef, useState } from \"react\"\n-import { ModelIcon } from \"../models/model-icon\"\n-import { Button } from \"../ui/button\"\n-import { FileIcon } from \"../ui/file-icon\"\n-import { FilePreview } from \"../ui/file-preview\"\n-import { TextareaAutosize } from \"../ui/textarea-autosize\"\n-import { WithTooltip } from \"../ui/with-tooltip\"\n-import { MessageActions } from \"./message-actions\"\n-import { MessageMarkdown } from \"./message-markdown\"\n+  IconPencil,\n+} from \"@tabler/icons-react\";\n+import Image from \"next/image\";\n+import { FC, useContext, useEffect, useRef, useState } from \"react\";\n+import { ModelIcon } from \"../models/model-icon\";\n+import { Button } from \"../ui/button\";\n+import { FileIcon } from \"../ui/file-icon\";\n+import { FilePreview } from \"../ui/file-preview\";\n+import { TextareaAutosize } from \"../ui/textarea-autosize\";\n+import { WithTooltip } from \"../ui/with-tooltip\";\n+import { MessageActions } from \"./message-actions\";\n+import { MessageMarkdown } from \"./message-markdown\";\n \n-const ICON_SIZE = 32\n+const ICON_SIZE = 32;\n \n interface MessageProps {\n-  message: Tables<\"messages\">\n-  fileItems: Tables<\"file_items\">[]\n-  isEditing: boolean\n-  isLast: boolean\n-  onStartEdit: (message: Tables<\"messages\">) => void\n-  onCancelEdit: () => void\n-  onSubmitEdit: (value: string, sequenceNumber: number) => void\n+  message: Tables<\"messages\">;\n+  fileItems: Tables<\"file_items\">[];\n+  isEditing: boolean;\n+  isLast: boolean;\n+  onStartEdit: (message: Tables<\"messages\">) => void;\n+  onCancelEdit: () => void;\n+  onSubmitEdit: (value: string, sequenceNumber: number) => void;\n }\n \n export const Message: FC<MessageProps> = ({\n   message,\n@@ -42,9 +42,9 @@\n   isEditing,\n   isLast,\n   onStartEdit,\n   onCancelEdit,\n-  onSubmitEdit\n+  onSubmitEdit,\n }) => {\n   const {\n     assistants,\n     profile,\n@@ -58,148 +58,127 @@\n     chatImages,\n     assistantImages,\n     toolInUse,\n     files,\n-    models\n-  } = useContext(ChatbotUIContext)\n+    models,\n+  } = useContext(ChatbotUIContext);\n \n-  const { handleSendMessage } = useChatHandler()\n+  const { handleSendMessage } = useChatHandler();\n \n-  const editInputRef = useRef<HTMLTextAreaElement>(null)\n+  const editInputRef = useRef<HTMLTextAreaElement>(null);\n \n-  const [isHovering, setIsHovering] = useState(false)\n-  const [editedMessage, setEditedMessage] = useState(message.content)\n+  const [isHovering, setIsHovering] = useState(false);\n+  const [editedMessage, setEditedMessage] = useState(message.content);\n \n-  const [showImagePreview, setShowImagePreview] = useState(false)\n-  const [selectedImage, setSelectedImage] = useState<MessageImage | null>(null)\n+  const [showImagePreview, setShowImagePreview] = useState(false);\n+  const [selectedImage, setSelectedImage] = useState<MessageImage | null>(null);\n \n-  const [showFileItemPreview, setShowFileItemPreview] = useState(false)\n+  const [showFileItemPreview, setShowFileItemPreview] = useState(false);\n   const [selectedFileItem, setSelectedFileItem] =\n-    useState<Tables<\"file_items\"> | null>(null)\n+    useState<Tables<\"file_items\"> | null>(null);\n \n-  const [viewSources, setViewSources] = useState(false)\n+  const [viewSources, setViewSources] = useState(false);\n \n-  const [translatedMessage, setTranslatedMessage] = useState<string | null>(null)\n-  const [isTranslating, setIsTranslating] = useState(false)\n-\n   const handleCopy = () => {\n     if (navigator.clipboard) {\n-      navigator.clipboard.writeText(message.content)\n+      navigator.clipboard.writeText(message.content);\n     } else {\n-      const textArea = document.createElement(\"textarea\")\n-      textArea.value = message.content\n-      document.body.appendChild(textArea)\n-      textArea.focus()\n-      textArea.select()\n-      document.execCommand(\"copy\")\n-      document.body.removeChild(textArea)\n+      const textArea = document.createElement(\"textarea\");\n+      textArea.value = message.content;\n+      document.body.appendChild(textArea);\n+      textArea.focus();\n+      textArea.select();\n+      document.execCommand(\"copy\");\n+      document.body.removeChild(textArea);\n     }\n-  }\n+  };\n \n   const handleSendEdit = () => {\n-    onSubmitEdit(editedMessage, message.sequence_number)\n-    onCancelEdit()\n-  }\n+    onSubmitEdit(editedMessage, message.sequence_number);\n+    onCancelEdit();\n+  };\n \n   const handleKeyDown = (event: React.KeyboardEvent) => {\n     if (isEditing && event.key === \"Enter\" && event.metaKey) {\n-      handleSendEdit()\n+      handleSendEdit();\n     }\n-  }\n+  };\n \n   const handleRegenerate = async () => {\n-    setIsGenerating(true)\n+    setIsGenerating(true);\n     await handleSendMessage(\n       editedMessage || chatMessages[chatMessages.length - 2].message.content,\n       chatMessages,\n       true\n-    )\n-  }\n+    );\n+  };\n \n   const handleStartEdit = () => {\n-    onStartEdit(message)\n-  }\n+    onStartEdit(message);\n+  };\n \n   useEffect(() => {\n-    setEditedMessage(message.content)\n+    setEditedMessage(message.content);\n \n     if (isEditing && editInputRef.current) {\n-      const input = editInputRef.current\n-      input.focus()\n-      input.setSelectionRange(input.value.length, input.value.length)\n+      const input = editInputRef.current;\n+      input.focus();\n+      input.setSelectionRange(input.value.length, input.value.length);\n     }\n-  }, [isEditing])\n+  }, [isEditing]);\n \n-  const handleTranslate = async () => {\n-    setIsTranslating(true)\n-    // Implement the translation logic here\n-    const translated = await translateText(message.content)\n-    setTranslatedMessage(translated)\n-    setIsTranslating(false)\n-  }\n-\n-  const translateText = async (text: string) => {\n-    // Placeholder for the translation API call\n-    // Replace with actual API call to translate the text\n-    return new Promise<string>(resolve => {\n-      setTimeout(() => {\n-        resolve(`Translated: ${text}`)\n-      }, 1000)\n-    })\n-  }\n-\n   const MODEL_DATA = [\n-    ...models.map(model => ({\n+    ...models.map((model) => ({\n       modelId: model.model_id as LLMID,\n       modelName: model.name,\n       provider: \"custom\" as ModelProvider,\n       hostedId: model.id,\n       platformLink: \"\",\n-      imageInput: false\n+      imageInput: false,\n     })),\n     ...LLM_LIST,\n     ...availableLocalModels,\n-    ...availableOpenRouterModels\n-  ].find(llm => llm.modelId === message.model) as LLM\n+    ...availableOpenRouterModels,\n+  ].find((llm) => llm.modelId === message.model) as LLM;\n \n   const messageAssistantImage = assistantImages.find(\n-    image => image.assistantId === message.assistant_id\n-  )?.base64\n+    (image) => image.assistantId === message.assistant_id\n+  )?.base64;\n \n   const selectedAssistantImage = assistantImages.find(\n-    image => image.path === selectedAssistant?.image_path\n-  )?.base64\n+    (image) => image.path === selectedAssistant?.image_path\n+  )?.base64;\n \n-  const modelDetails = LLM_LIST.find(model => model.modelId === message.model)\n+  const modelDetails = LLM_LIST.find((model) => model.modelId === message.model);\n \n   const fileAccumulator: Record<\n     string,\n     {\n-      id: string\n-      name: string\n-      count: number\n-      type: string\n-      description: string\n+      id: string;\n+      name: string;\n+      count: number;\n+      type: string;\n+      description: string;\n     }\n-  > = {}\n+  > = {};\n \n   const fileSummary = fileItems.reduce((acc, fileItem) => {\n-    const parentFile = files.find(file => file.id === fileItem.file_id)\n+    const parentFile = files.find((file) => file.id === fileItem.file_id);\n     if (parentFile) {\n       if (!acc[parentFile.id]) {\n         acc[parentFile.id] = {\n           id: parentFile.id,\n           name: parentFile.name,\n           count: 1,\n           type: parentFile.type,\n-          description: parentFile.description\n-        }\n+          description: parentFile.description,\n+        };\n       } else {\n-        acc[parentFile.id].count += 1\n+        acc[parentFile.id].count += 1;\n       }\n     }\n-    return acc\n-  }, fileAccumulator)\n+    return acc;\n+  }, fileAccumulator);\n \n   return (\n     <div\n       className={cn(\n@@ -237,9 +216,9 @@\n                 messageAssistantImage ? (\n                   <Image\n                     style={{\n                       width: `${ICON_SIZE}px`,\n-                      height: `${ICON_SIZE}px`\n+                      height: `${ICON_SIZE}px`,\n                     }}\n                     className=\"rounded\"\n                     src={messageAssistantImage}\n                     alt=\"assistant image\"\n@@ -275,13 +254,13 @@\n               <div className=\"font-semibold\">\n                 {message.role === \"assistant\"\n                   ? message.assistant_id\n                     ? assistants.find(\n-                        assistant => assistant.id === message.assistant_id\n+                        (assistant) => assistant.id === message.assistant_id\n                       )?.name\n                     : selectedAssistant\n-                      ? selectedAssistant?.name\n-                      : MODEL_DATA?.modelName\n+                    ? selectedAssistant?.name\n+                    : MODEL_DATA?.modelName\n                   : profile?.display_name ?? profile?.username}\n               </div>\n             </div>\n           )}\n@@ -294,23 +273,23 @@\n                 switch (toolInUse) {\n                   case \"none\":\n                     return (\n                       <IconCircleFilled className=\"animate-pulse\" size={20} />\n-                    )\n+                    );\n                   case \"retrieval\":\n                     return (\n                       <div className=\"flex animate-pulse items-center space-x-2\">\n                         <IconFileText size={20} />\n                         <div>Searching files...</div>\n                       </div>\n-                    )\n+                    );\n                   default:\n                     return (\n                       <div className=\"flex animate-pulse items-center space-x-2\">\n                         <IconBolt size={20} />\n                         <div>Using {toolInUse}...</div>\n                       </div>\n-                    )\n+                    );\n                 }\n               })()}\n             </>\n           ) : isEditing ? (\n@@ -321,9 +300,9 @@\n               onValueChange={setEditedMessage}\n               maxRows={20}\n             />\n           ) : (\n-            <MessageMarkdown content={translatedMessage || message.content} />\n+            <MessageMarkdown content={message.content} />\n           )}\n         </div>\n \n         {fileItems.length > 0 && (\n@@ -360,21 +339,21 @@\n                         </div>\n                         <div className=\"truncate\">{file.name}</div>\n                       </div>\n                       {fileItems\n-                        .filter(fileItem => {\n+                        .filter((fileItem) => {\n                           const parentFile = files.find(\n-                            parentFile => parentFile.id === fileItem.file_id\n-                          )\n-                          return parentFile?.id === file.id\n+                            (parentFile) => parentFile.id === fileItem.file_id\n+                          );\n+                          return parentFile?.id === file.id;\n                         })\n                         .map((fileItem, index) => (\n                           <div\n                             key={index}\n                             className=\"ml-8 mt-1.5 flex cursor-pointer items-center space-x-2 hover:opacity-50\"\n                             onClick={() => {\n-                              setSelectedFileItem(fileItem)\n-                              setShowFileItemPreview(true)\n+                              setSelectedFileItem(fileItem);\n+                              setShowFileItemPreview(true);\n                             }}\n                           >\n                             <div className=\"text-sm font-normal\">\n                               <span className=\"mr-1 text-lg font-bold\">-</span>{\" \"}\n@@ -391,9 +370,9 @@\n         )}\n \n         <div className=\"mt-3 flex flex-wrap gap-2\">\n           {message.image_paths.map((path, index) => {\n-            const item = chatImages.find(image => image.path === path)\n+            const item = chatImages.find((image) => image.path === path);\n \n             return (\n               <Image\n                 key={index}\n@@ -407,15 +386,16 @@\n                     messageId: message.id,\n                     path,\n                     base64: path.startsWith(\"data\") ? path : item?.base64 || \"\",\n                     url: path.startsWith(\"data\") ? \"\" : item?.url || \"\",\n-                    file: null\n-                  })\n-                  setShowImagePreview(true)\n+                    file: null,\n+                  });\n+\n+                  setShowImagePreview(true);\n                 }}\n                 loading=\"lazy\"\n               />\n-            )\n+            );\n           })}\n         </div>\n         {isEditing && (\n           <div className=\"mt-4 flex justify-center space-x-2\">\n@@ -426,25 +406,18 @@\n               Cancel\n             </Button>\n           </div>\n         )}\n-\n-        {!isEditing && !isTranslating && (\n-          <Button size=\"sm\" onClick={handleTranslate}>\n-            Translate\n-          </Button>\n-        )}\n-        {isTranslating && <div>Translating...</div>}\n       </div>\n \n       {showImagePreview && selectedImage && (\n         <FilePreview\n           type=\"image\"\n           item={selectedImage}\n           isOpen={showImagePreview}\n           onOpenChange={(isOpen: boolean) => {\n-            setShowImagePreview(isOpen)\n-            setSelectedImage(null)\n+            setShowImagePreview(isOpen);\n+            setSelectedImage(null);\n           }}\n         />\n       )}\n \n@@ -453,12 +426,12 @@\n           type=\"file_item\"\n           item={selectedFileItem}\n           isOpen={showFileItemPreview}\n           onOpenChange={(isOpen: boolean) => {\n-            setShowFileItemPreview(isOpen)\n-            setSelectedFileItem(null)\n+            setShowFileItemPreview(isOpen);\n+            setSelectedFileItem(null);\n           }}\n         />\n       )}\n     </div>\n-  )\n-}\n+  );\n+};\n"
                },
                {
                    "date": 1717796593127,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,8 +22,9 @@\n import { TextareaAutosize } from \"../ui/textarea-autosize\";\n import { WithTooltip } from \"../ui/with-tooltip\";\n import { MessageActions } from \"./message-actions\";\n import { MessageMarkdown } from \"./message-markdown\";\n+import { handleUserInput } from './utils/chatHandler';  // Import the chat handler\n \n const ICON_SIZE = 32;\n \n interface MessageProps {\n@@ -125,8 +126,15 @@\n       input.setSelectionRange(input.value.length, input.value.length);\n     }\n   }, [isEditing]);\n \n+  // New function to handle user input and trigger API calls\n+  const handleMessageInput = async (input: string) => {\n+    const response = await handleUserInput(input);\n+    // Process the response as needed (e.g., display it in the chat interface)\n+    console.log(response);\n+  };\n+\n   const MODEL_DATA = [\n     ...models.map((model) => ({\n       modelId: model.model_id as LLMID,\n       modelName: model.name,\n@@ -388,9 +396,8 @@\n                     base64: path.startsWith(\"data\") ? path : item?.base64 || \"\",\n                     url: path.startsWith(\"data\") ? \"\" : item?.url || \"\",\n                     file: null,\n                   });\n-\n                   setShowImagePreview(true);\n                 }}\n                 loading=\"lazy\"\n               />\n@@ -406,8 +413,15 @@\n               Cancel\n             </Button>\n           </div>\n         )}\n+\n+        {!isEditing && !isTranslating && (\n+          <Button size=\"sm\" onClick={() => handleMessageInput(message.content)}>\n+            Execute Command\n+          </Button>\n+        )}\n+        {isTranslating && <div>Translating...</div>}\n       </div>\n \n       {showImagePreview && selectedImage && (\n         <FilePreview\n"
                },
                {
                    "date": 1717797109637,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,9 +22,9 @@\n import { TextareaAutosize } from \"../ui/textarea-autosize\";\n import { WithTooltip } from \"../ui/with-tooltip\";\n import { MessageActions } from \"./message-actions\";\n import { MessageMarkdown } from \"./message-markdown\";\n-import { handleUserInput } from './utils/chatHandler';  // Import the chat handler\n+import { handleUserInput } from '@/lib/utils/chatHandler';  // Import the chat handler\n \n const ICON_SIZE = 32;\n \n interface MessageProps {\n"
                },
                {
                    "date": 1717797156733,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,9 +22,9 @@\n import { TextareaAutosize } from \"../ui/textarea-autosize\";\n import { WithTooltip } from \"../ui/with-tooltip\";\n import { MessageActions } from \"./message-actions\";\n import { MessageMarkdown } from \"./message-markdown\";\n-import { handleUserInput } from '@/lib/utils/chatHandler';  // Import the chat handler\n+import { handleUserInput } from '/Users/jeffsperandeo/Projects/chatbot-ui-fed/backend/utils/chatHandler.js';  // Import the chat handler\n \n const ICON_SIZE = 32;\n \n interface MessageProps {\n"
                },
                {
                    "date": 1717797416790,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,9 +22,9 @@\n import { TextareaAutosize } from \"../ui/textarea-autosize\";\n import { WithTooltip } from \"../ui/with-tooltip\";\n import { MessageActions } from \"./message-actions\";\n import { MessageMarkdown } from \"./message-markdown\";\n-import { handleUserInput } from '/Users/jeffsperandeo/Projects/chatbot-ui-fed/backend/utils/chatHandler.js';  // Import the chat handler\n+import { handleUserInput } from '@/utils/chatHandler';\n \n const ICON_SIZE = 32;\n \n interface MessageProps {\n@@ -68,8 +68,9 @@\n   const editInputRef = useRef<HTMLTextAreaElement>(null);\n \n   const [isHovering, setIsHovering] = useState(false);\n   const [editedMessage, setEditedMessage] = useState(message.content);\n+  const [responseMessage, setResponseMessage] = useState<string | null>(null);\n \n   const [showImagePreview, setShowImagePreview] = useState(false);\n   const [selectedImage, setSelectedImage] = useState<MessageImage | null>(null);\n \n@@ -126,13 +127,11 @@\n       input.setSelectionRange(input.value.length, input.value.length);\n     }\n   }, [isEditing]);\n \n-  // New function to handle user input and trigger API calls\n-  const handleMessageInput = async (input: string) => {\n-    const response = await handleUserInput(input);\n-    // Process the response as needed (e.g., display it in the chat interface)\n-    console.log(response);\n+  const handleExecuteCommand = async () => {\n+    const response = await handleUserInput(message.content);\n+    setResponseMessage(response);\n   };\n \n   const MODEL_DATA = [\n     ...models.map((model) => ({\n@@ -308,9 +307,12 @@\n               onValueChange={setEditedMessage}\n               maxRows={20}\n             />\n           ) : (\n-            <MessageMarkdown content={message.content} />\n+            <>\n+              <MessageMarkdown content={message.content} />\n+              {responseMessage && <MessageMarkdown content={responseMessage} />}\n+            </>\n           )}\n         </div>\n \n         {fileItems.length > 0 && (\n@@ -396,8 +398,9 @@\n                     base64: path.startsWith(\"data\") ? path : item?.base64 || \"\",\n                     url: path.startsWith(\"data\") ? \"\" : item?.url || \"\",\n                     file: null,\n                   });\n+\n                   setShowImagePreview(true);\n                 }}\n                 loading=\"lazy\"\n               />\n@@ -413,15 +416,13 @@\n               Cancel\n             </Button>\n           </div>\n         )}\n-\n-        {!isEditing && !isTranslating && (\n-          <Button size=\"sm\" onClick={() => handleMessageInput(message.content)}>\n+        {!isEditing && !responseMessage && (\n+          <Button size=\"sm\" onClick={handleExecuteCommand}>\n             Execute Command\n           </Button>\n         )}\n-        {isTranslating && <div>Translating...</div>}\n       </div>\n \n       {showImagePreview && selectedImage && (\n         <FilePreview\n"
                },
                {
                    "date": 1717797467052,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,9 +22,9 @@\n import { TextareaAutosize } from \"../ui/textarea-autosize\";\n import { WithTooltip } from \"../ui/with-tooltip\";\n import { MessageActions } from \"./message-actions\";\n import { MessageMarkdown } from \"./message-markdown\";\n-import { handleUserInput } from '@/utils/chatHandler';\n+import { handleUserInput } from 'backend/utils/chatHandler.js';\n \n const ICON_SIZE = 32;\n \n interface MessageProps {\n"
                },
                {
                    "date": 1717797478596,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,9 +22,9 @@\n import { TextareaAutosize } from \"../ui/textarea-autosize\";\n import { WithTooltip } from \"../ui/with-tooltip\";\n import { MessageActions } from \"./message-actions\";\n import { MessageMarkdown } from \"./message-markdown\";\n-import { handleUserInput } from 'backend/utils/chatHandler.js';\n+import { handleUserInput } from '/utils/chatHandler.js';\n \n const ICON_SIZE = 32;\n \n interface MessageProps {\n"
                },
                {
                    "date": 1717797485772,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,9 +22,9 @@\n import { TextareaAutosize } from \"../ui/textarea-autosize\";\n import { WithTooltip } from \"../ui/with-tooltip\";\n import { MessageActions } from \"./message-actions\";\n import { MessageMarkdown } from \"./message-markdown\";\n-import { handleUserInput } from '/utils/chatHandler.js';\n+import { handleUserInput } from '../utils/chatHandler.js';\n \n const ICON_SIZE = 32;\n \n interface MessageProps {\n"
                },
                {
                    "date": 1717797519277,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,9 +22,9 @@\n import { TextareaAutosize } from \"../ui/textarea-autosize\";\n import { WithTooltip } from \"../ui/with-tooltip\";\n import { MessageActions } from \"./message-actions\";\n import { MessageMarkdown } from \"./message-markdown\";\n-import { handleUserInput } from '../utils/chatHandler.js';\n+import { handleUserInput } from '../utils/chatHandler';\n \n const ICON_SIZE = 32;\n \n interface MessageProps {\n"
                },
                {
                    "date": 1717797524810,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,9 +22,9 @@\n import { TextareaAutosize } from \"../ui/textarea-autosize\";\n import { WithTooltip } from \"../ui/with-tooltip\";\n import { MessageActions } from \"./message-actions\";\n import { MessageMarkdown } from \"./message-markdown\";\n-import { handleUserInput } from '../utils/chatHandler';\n+import { handleUserInput } from './utils/chatHandler';\n \n const ICON_SIZE = 32;\n \n interface MessageProps {\n"
                },
                {
                    "date": 1717797531984,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,9 +22,9 @@\n import { TextareaAutosize } from \"../ui/textarea-autosize\";\n import { WithTooltip } from \"../ui/with-tooltip\";\n import { MessageActions } from \"./message-actions\";\n import { MessageMarkdown } from \"./message-markdown\";\n-import { handleUserInput } from './utils/chatHandler';\n+import { handleUserInput } from '/Users/jeffsperandeo/Projects/chatbot-ui-fed/backend/utils/chatHandler.js';\n \n const ICON_SIZE = 32;\n \n interface MessageProps {\n"
                },
                {
                    "date": 1717808454847,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,9 +73,10 @@\n \n   const [showImagePreview, setShowImagePreview] = useState(false);\n   const [selectedImage, setSelectedImage] = useState<MessageImage | null>(null);\n \n-  const [showFileItemPreview, setShowFileItemPreview] = useState(false);\n+  const [showFileItemPreview, setShowFileItemPreview] =\n+    useState(false);\n   const [selectedFileItem, setSelectedFileItem] =\n     useState<Tables<\"file_items\"> | null>(null);\n \n   const [viewSources, setViewSources] = useState(false);\n@@ -127,12 +128,17 @@\n       input.setSelectionRange(input.value.length, input.value.length);\n     }\n   }, [isEditing]);\n \n-  const handleExecuteCommand = async () => {\n-    const response = await handleUserInput(message.content);\n-    setResponseMessage(response);\n-  };\n+  useEffect(() => {\n+    const executeCommand = async () => {\n+      if (message.role === 'user' && !isEditing) {\n+        const response = await handleUserInput(message.content);\n+        setResponseMessage(response);\n+      }\n+    };\n+    executeCommand();\n+  }, [message.content, isEditing]);\n \n   const MODEL_DATA = [\n     ...models.map((model) => ({\n       modelId: model.model_id as LLMID,\n@@ -416,13 +422,8 @@\n               Cancel\n             </Button>\n           </div>\n         )}\n-        {!isEditing && !responseMessage && (\n-          <Button size=\"sm\" onClick={handleExecuteCommand}>\n-            Execute Command\n-          </Button>\n-        )}\n       </div>\n \n       {showImagePreview && selectedImage && (\n         <FilePreview\n"
                }
            ],
            "date": 1717794800232,
            "name": "Commit-0",
            "content": "import { useChatHandler } from \"@/components/chat/chat-hooks/use-chat-handler\"\nimport { ChatbotUIContext } from \"@/context/context\"\nimport { LLM_LIST } from \"@/lib/models/llm/llm-list\"\nimport { cn } from \"@/lib/utils\"\nimport { Tables } from \"@/supabase/types\"\nimport { LLM, LLMID, MessageImage, ModelProvider } from \"@/types\"\nimport {\n  IconBolt,\n  IconCaretDownFilled,\n  IconCaretRightFilled,\n  IconCircleFilled,\n  IconFileText,\n  IconMoodSmile,\n  IconPencil\n} from \"@tabler/icons-react\"\nimport Image from \"next/image\"\nimport { FC, useContext, useEffect, useRef, useState } from \"react\"\nimport { ModelIcon } from \"../models/model-icon\"\nimport { Button } from \"../ui/button\"\nimport { FileIcon } from \"../ui/file-icon\"\nimport { FilePreview } from \"../ui/file-preview\"\nimport { TextareaAutosize } from \"../ui/textarea-autosize\"\nimport { WithTooltip } from \"../ui/with-tooltip\"\nimport { MessageActions } from \"./message-actions\"\nimport { MessageMarkdown } from \"./message-markdown\"\n\nconst ICON_SIZE = 32\n\ninterface MessageProps {\n  message: Tables<\"messages\">\n  fileItems: Tables<\"file_items\">[]\n  isEditing: boolean\n  isLast: boolean\n  onStartEdit: (message: Tables<\"messages\">) => void\n  onCancelEdit: () => void\n  onSubmitEdit: (value: string, sequenceNumber: number) => void\n}\n\nexport const Message: FC<MessageProps> = ({\n  message,\n  fileItems,\n  isEditing,\n  isLast,\n  onStartEdit,\n  onCancelEdit,\n  onSubmitEdit\n}) => {\n  const {\n    assistants,\n    profile,\n    isGenerating,\n    setIsGenerating,\n    firstTokenReceived,\n    availableLocalModels,\n    availableOpenRouterModels,\n    chatMessages,\n    selectedAssistant,\n    chatImages,\n    assistantImages,\n    toolInUse,\n    files,\n    models\n  } = useContext(ChatbotUIContext)\n\n  const { handleSendMessage } = useChatHandler()\n\n  const editInputRef = useRef<HTMLTextAreaElement>(null)\n\n  const [isHovering, setIsHovering] = useState(false)\n  const [editedMessage, setEditedMessage] = useState(message.content)\n\n  const [showImagePreview, setShowImagePreview] = useState(false)\n  const [selectedImage, setSelectedImage] = useState<MessageImage | null>(null)\n\n  const [showFileItemPreview, setShowFileItemPreview] = useState(false)\n  const [selectedFileItem, setSelectedFileItem] =\n    useState<Tables<\"file_items\"> | null>(null)\n\n  const [viewSources, setViewSources] = useState(false)\n\n  const [translatedMessage, setTranslatedMessage] = useState<string | null>(null)\n  const [isTranslating, setIsTranslating] = useState(false)\n\n  const handleCopy = () => {\n    if (navigator.clipboard) {\n      navigator.clipboard.writeText(message.content)\n    } else {\n      const textArea = document.createElement(\"textarea\")\n      textArea.value = message.content\n      document.body.appendChild(textArea)\n      textArea.focus()\n      textArea.select()\n      document.execCommand(\"copy\")\n      document.body.removeChild(textArea)\n    }\n  }\n\n  const handleSendEdit = () => {\n    onSubmitEdit(editedMessage, message.sequence_number)\n    onCancelEdit()\n  }\n\n  const handleKeyDown = (event: React.KeyboardEvent) => {\n    if (isEditing && event.key === \"Enter\" && event.metaKey) {\n      handleSendEdit()\n    }\n  }\n\n  const handleRegenerate = async () => {\n    setIsGenerating(true)\n    await handleSendMessage(\n      editedMessage || chatMessages[chatMessages.length - 2].message.content,\n      chatMessages,\n      true\n    )\n  }\n\n  const handleStartEdit = () => {\n    onStartEdit(message)\n  }\n\n  useEffect(() => {\n    setEditedMessage(message.content)\n\n    if (isEditing && editInputRef.current) {\n      const input = editInputRef.current\n      input.focus()\n      input.setSelectionRange(input.value.length, input.value.length)\n    }\n  }, [isEditing])\n\n  const handleTranslate = async () => {\n    setIsTranslating(true)\n    // Implement the translation logic here\n    const translated = await translateText(message.content)\n    setTranslatedMessage(translated)\n    setIsTranslating(false)\n  }\n\n  const translateText = async (text: string) => {\n    // Placeholder for the translation API call\n    // Replace with actual API call to translate the text\n    return new Promise<string>(resolve => {\n      setTimeout(() => {\n        resolve(`Translated: ${text}`)\n      }, 1000)\n    })\n  }\n\n  const MODEL_DATA = [\n    ...models.map(model => ({\n      modelId: model.model_id as LLMID,\n      modelName: model.name,\n      provider: \"custom\" as ModelProvider,\n      hostedId: model.id,\n      platformLink: \"\",\n      imageInput: false\n    })),\n    ...LLM_LIST,\n    ...availableLocalModels,\n    ...availableOpenRouterModels\n  ].find(llm => llm.modelId === message.model) as LLM\n\n  const messageAssistantImage = assistantImages.find(\n    image => image.assistantId === message.assistant_id\n  )?.base64\n\n  const selectedAssistantImage = assistantImages.find(\n    image => image.path === selectedAssistant?.image_path\n  )?.base64\n\n  const modelDetails = LLM_LIST.find(model => model.modelId === message.model)\n\n  const fileAccumulator: Record<\n    string,\n    {\n      id: string\n      name: string\n      count: number\n      type: string\n      description: string\n    }\n  > = {}\n\n  const fileSummary = fileItems.reduce((acc, fileItem) => {\n    const parentFile = files.find(file => file.id === fileItem.file_id)\n    if (parentFile) {\n      if (!acc[parentFile.id]) {\n        acc[parentFile.id] = {\n          id: parentFile.id,\n          name: parentFile.name,\n          count: 1,\n          type: parentFile.type,\n          description: parentFile.description\n        }\n      } else {\n        acc[parentFile.id].count += 1\n      }\n    }\n    return acc\n  }, fileAccumulator)\n\n  return (\n    <div\n      className={cn(\n        \"flex w-full justify-center\",\n        message.role === \"user\" ? \"\" : \"bg-secondary\"\n      )}\n      onMouseEnter={() => setIsHovering(true)}\n      onMouseLeave={() => setIsHovering(false)}\n      onKeyDown={handleKeyDown}\n    >\n      <div className=\"relative flex w-full flex-col p-6 sm:w-[550px] sm:px-0 md:w-[650px] lg:w-[650px] xl:w-[700px]\">\n        <div className=\"absolute right-5 top-7 sm:right-0\">\n          <MessageActions\n            onCopy={handleCopy}\n            onEdit={handleStartEdit}\n            isAssistant={message.role === \"assistant\"}\n            isLast={isLast}\n            isEditing={isEditing}\n            isHovering={isHovering}\n            onRegenerate={handleRegenerate}\n          />\n        </div>\n        <div className=\"space-y-3\">\n          {message.role === \"system\" ? (\n            <div className=\"flex items-center space-x-4\">\n              <IconPencil\n                className=\"border-primary bg-primary text-secondary rounded border-DEFAULT p-1\"\n                size={ICON_SIZE}\n              />\n              <div className=\"text-lg font-semibold\">Prompt</div>\n            </div>\n          ) : (\n            <div className=\"flex items-center space-x-3\">\n              {message.role === \"assistant\" ? (\n                messageAssistantImage ? (\n                  <Image\n                    style={{\n                      width: `${ICON_SIZE}px`,\n                      height: `${ICON_SIZE}px`\n                    }}\n                    className=\"rounded\"\n                    src={messageAssistantImage}\n                    alt=\"assistant image\"\n                    height={ICON_SIZE}\n                    width={ICON_SIZE}\n                  />\n                ) : (\n                  <WithTooltip\n                    display={<div>{MODEL_DATA?.modelName}</div>}\n                    trigger={\n                      <ModelIcon\n                        provider={modelDetails?.provider || \"custom\"}\n                        height={ICON_SIZE}\n                        width={ICON_SIZE}\n                      />\n                    }\n                  />\n                )\n              ) : profile?.image_url ? (\n                <Image\n                  className={`size-[32px] rounded`}\n                  src={profile?.image_url}\n                  height={32}\n                  width={32}\n                  alt=\"user image\"\n                />\n              ) : (\n                <IconMoodSmile\n                  className=\"bg-primary text-secondary border-primary rounded border-DEFAULT p-1\"\n                  size={ICON_SIZE}\n                />\n              )}\n              <div className=\"font-semibold\">\n                {message.role === \"assistant\"\n                  ? message.assistant_id\n                    ? assistants.find(\n                        assistant => assistant.id === message.assistant_id\n                      )?.name\n                    : selectedAssistant\n                      ? selectedAssistant?.name\n                      : MODEL_DATA?.modelName\n                  : profile?.display_name ?? profile?.username}\n              </div>\n            </div>\n          )}\n          {!firstTokenReceived &&\n          isGenerating &&\n          isLast &&\n          message.role === \"assistant\" ? (\n            <>\n              {(() => {\n                switch (toolInUse) {\n                  case \"none\":\n                    return (\n                      <IconCircleFilled className=\"animate-pulse\" size={20} />\n                    )\n                  case \"retrieval\":\n                    return (\n                      <div className=\"flex animate-pulse items-center space-x-2\">\n                        <IconFileText size={20} />\n                        <div>Searching files...</div>\n                      </div>\n                    )\n                  default:\n                    return (\n                      <div className=\"flex animate-pulse items-center space-x-2\">\n                        <IconBolt size={20} />\n                        <div>Using {toolInUse}...</div>\n                      </div>\n                    )\n                }\n              })()}\n            </>\n          ) : isEditing ? (\n            <TextareaAutosize\n              textareaRef={editInputRef}\n              className=\"text-md\"\n              value={editedMessage}\n              onValueChange={setEditedMessage}\n              maxRows={20}\n            />\n          ) : (\n            <MessageMarkdown content={translatedMessage || message.content} />\n          )}\n        </div>\n\n        {fileItems.length > 0 && (\n          <div className=\"border-primary mt-6 border-t pt-4 font-bold\">\n            {!viewSources ? (\n              <div\n                className=\"flex cursor-pointer items-center text-lg hover:opacity-50\"\n                onClick={() => setViewSources(true)}\n              >\n                {fileItems.length}\n                {fileItems.length > 1 ? \" Sources \" : \" Source \"}\n                from {Object.keys(fileSummary).length}{\" \"}\n                {Object.keys(fileSummary).length > 1 ? \"Files\" : \"File\"}{\" \"}\n                <IconCaretRightFilled className=\"ml-1\" />\n              </div>\n            ) : (\n              <>\n                <div\n                  className=\"flex cursor-pointer items-center text-lg hover:opacity-50\"\n                  onClick={() => setViewSources(false)}\n                >\n                  {fileItems.length}\n                  {fileItems.length > 1 ? \" Sources \" : \" Source \"}\n                  from {Object.keys(fileSummary).length}{\" \"}\n                  {Object.keys(fileSummary).length > 1 ? \"Files\" : \"File\"}{\" \"}\n                  <IconCaretDownFilled className=\"ml-1\" />\n                </div>\n                <div className=\"mt-3 space-y-4\">\n                  {Object.values(fileSummary).map((file, index) => (\n                    <div key={index}>\n                      <div className=\"flex items-center space-x-2\">\n                        <div>\n                          <FileIcon type={file.type} />\n                        </div>\n                        <div className=\"truncate\">{file.name}</div>\n                      </div>\n                      {fileItems\n                        .filter(fileItem => {\n                          const parentFile = files.find(\n                            parentFile => parentFile.id === fileItem.file_id\n                          )\n                          return parentFile?.id === file.id\n                        })\n                        .map((fileItem, index) => (\n                          <div\n                            key={index}\n                            className=\"ml-8 mt-1.5 flex cursor-pointer items-center space-x-2 hover:opacity-50\"\n                            onClick={() => {\n                              setSelectedFileItem(fileItem)\n                              setShowFileItemPreview(true)\n                            }}\n                          >\n                            <div className=\"text-sm font-normal\">\n                              <span className=\"mr-1 text-lg font-bold\">-</span>{\" \"}\n                              {fileItem.content.substring(0, 200)}...\n                            </div>\n                          </div>\n                        ))}\n                    </div>\n                  ))}\n                </div>\n              </>\n            )}\n          </div>\n        )}\n\n        <div className=\"mt-3 flex flex-wrap gap-2\">\n          {message.image_paths.map((path, index) => {\n            const item = chatImages.find(image => image.path === path)\n\n            return (\n              <Image\n                key={index}\n                className=\"cursor-pointer rounded hover:opacity-50\"\n                src={path.startsWith(\"data\") ? path : item?.base64}\n                alt=\"message image\"\n                width={300}\n                height={300}\n                onClick={() => {\n                  setSelectedImage({\n                    messageId: message.id,\n                    path,\n                    base64: path.startsWith(\"data\") ? path : item?.base64 || \"\",\n                    url: path.startsWith(\"data\") ? \"\" : item?.url || \"\",\n                    file: null\n                  })\n                  setShowImagePreview(true)\n                }}\n                loading=\"lazy\"\n              />\n            )\n          })}\n        </div>\n        {isEditing && (\n          <div className=\"mt-4 flex justify-center space-x-2\">\n            <Button size=\"sm\" onClick={handleSendEdit}>\n              Save & Send\n            </Button>\n            <Button size=\"sm\" variant=\"outline\" onClick={onCancelEdit}>\n              Cancel\n            </Button>\n          </div>\n        )}\n\n        {!isEditing && !isTranslating && (\n          <Button size=\"sm\" onClick={handleTranslate}>\n            Translate\n          </Button>\n        )}\n        {isTranslating && <div>Translating...</div>}\n      </div>\n\n      {showImagePreview && selectedImage && (\n        <FilePreview\n          type=\"image\"\n          item={selectedImage}\n          isOpen={showImagePreview}\n          onOpenChange={(isOpen: boolean) => {\n            setShowImagePreview(isOpen)\n            setSelectedImage(null)\n          }}\n        />\n      )}\n\n      {showFileItemPreview && selectedFileItem && (\n        <FilePreview\n          type=\"file_item\"\n          item={selectedFileItem}\n          isOpen={showFileItemPreview}\n          onOpenChange={(isOpen: boolean) => {\n            setShowFileItemPreview(isOpen)\n            setSelectedFileItem(null)\n          }}\n        />\n      )}\n    </div>\n  )\n}\n"
        }
    ]
}