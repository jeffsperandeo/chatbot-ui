{
    "sourceFile": "app/api/assistants/openai/route.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1718134138122,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1718134138122,
            "name": "Commit-0",
            "content": "import { checkApiKey, getServerProfile } from \"@/lib/server/server-chat-helpers\"\nimport { ChatSettings } from \"@/types\"\nimport { OpenAIStream, StreamingTextResponse } from \"ai\"\nimport { ServerRuntime } from \"next\"\nimport OpenAI from \"openai\"\n\nexport const runtime: ServerRuntime = \"edge\"\n\nexport async function POST(request: Request) {\n  const json = await request.json()\n  const { chatSettings, messages } = json as {\n    chatSettings: ChatSettings\n    messages: any[]\n  }\n\n  try {\n    const profile = await getServerProfile()\n\n    checkApiKey(profile.openai_api_key, \"OpenAI\")\n\n    const openai = new OpenAI({\n      apiKey: profile.openai_api_key || \"\",\n      organization: profile.openai_organization_id\n    })\n\n    const response = await openai.chat.completions.create({\n      model: chatSettings.model,\n      messages: messages,\n      temperature: chatSettings.temperature,\n      max_tokens:\n        chatSettings.model === \"gpt-4-vision-preview\" ||\n        chatSettings.model === \"gpt-4o\"\n          ? 4096\n          : undefined,\n      stream: true\n    })\n\n    // Convert the response into a stream\n    const stream = OpenAIStream(response)\n\n    return new StreamingTextResponse(stream)\n  } catch (error: any) {\n    let errorMessage = error.message || \"An unexpected error occurred\"\n    const errorCode = error.status || 500\n\n    if (errorMessage.toLowerCase().includes(\"api key not found\")) {\n      errorMessage =\n        \"OpenAI API Key not found. Please set it in your profile settings.\"\n    } else if (errorMessage.toLowerCase().includes(\"incorrect api key\")) {\n      errorMessage =\n        \"OpenAI API Key is incorrect. Please fix it in your profile settings.\"\n    }\n\n    return new Response(JSON.stringify({ message: errorMessage }), {\n      status: errorCode\n    })\n  }\n}\n"
        }
    ]
}