{
    "sourceFile": "backend/controllers/dataController.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 5,
            "patches": [
                {
                    "date": 1717897809321,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1717897815063,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,19 +1,50 @@\n-// backend/controllers/dataController.js\n-const axios = require('axios');\n+const { searchCustomer, createVehicle, searchVehicleByVin, listAppointments: fetchAppointments } = require('../services/tekmetricService');\n \n-const listAppointments = async (req, res) => {\n+async function getCustomer(req, res) {\n+    let { search } = req.query;\n     try {\n-        const token = req.headers.authorization.split(' ')[1]; // Extract token from the Authorization header\n-        const response = await axios.get('https://sandbox.tekmetric.com/api/v1/appointments', {\n-            headers: {\n-                'Authorization': `Bearer ${token}`\n-            }\n-        });\n-        res.json(response.data);\n+        const data = await searchCustomer(search);\n+        res.status(200).json(data);\n     } catch (error) {\n-        console.error('Error fetching appointments:', error);\n-        res.status(error.response ? error.response.status : 500).send(error.response ? error.response.data : 'Error fetching appointments');\n+        console.error('Error retrieving customer data:', error);\n+        res.status(500).send('Error retrieving customer data');\n     }\n-};\n+}\n \n-module.exports = { listAppointments };\n+async function createNewVehicle(req, res) {\n+    const vehicleData = req.body;\n+    try {\n+        const response = await createVehicle(vehicleData);\n+        res.status(201).json(response);\n+    } catch (error) {\n+        console.error('Error creating vehicle:', error);\n+        res.status(500).send('Error creating vehicle');\n+    }\n+}\n+\n+async function getVehicleDetails(req, res) {\n+    const { vin } = req.query;\n+    try {\n+        const vehicles = await searchVehicleByVin(vin);\n+        if (vehicles && vehicles.length > 0) {\n+            res.status(200).json(vehicles[0]);\n+        } else {\n+            res.status(404).send('Vehicle not found');\n+        }\n+    } catch (error) {\n+        console.error('Error retrieving vehicle details:', error);\n+        res.status(500).send('Error retrieving vehicle details');\n+    }\n+}\n+\n+async function listAppointments(req, res) {\n+    try {\n+        const appointments = await fetchAppointments();\n+        res.status(200).json(appointments);\n+    } catch (error) {\n+        console.error('Error retrieving appointments:', error);\n+        res.status(500).send('Error retrieving appointments');\n+    }\n+}\n+\n+module.exports = { getCustomer, createNewVehicle, getVehicleDetails, listAppointments };\n"
                },
                {
                    "date": 1717898328487,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,50 +1,29 @@\n-const { searchCustomer, createVehicle, searchVehicleByVin, listAppointments: fetchAppointments } = require('../services/tekmetricService');\n+const { tekmetricsApi } = require('../services/tekmetricService');\n \n-async function getCustomer(req, res) {\n-    let { search } = req.query;\n-    try {\n-        const data = await searchCustomer(search);\n-        res.status(200).json(data);\n-    } catch (error) {\n-        console.error('Error retrieving customer data:', error);\n-        res.status(500).send('Error retrieving customer data');\n-    }\n-}\n+const getCustomer = async (req, res) => {\n+    // Your existing code\n+};\n \n-async function createNewVehicle(req, res) {\n-    const vehicleData = req.body;\n-    try {\n-        const response = await createVehicle(vehicleData);\n-        res.status(201).json(response);\n-    } catch (error) {\n-        console.error('Error creating vehicle:', error);\n-        res.status(500).send('Error creating vehicle');\n-    }\n-}\n+const createNewVehicle = async (req, res) => {\n+    // Your existing code\n+};\n \n-async function getVehicleDetails(req, res) {\n-    const { vin } = req.query;\n-    try {\n-        const vehicles = await searchVehicleByVin(vin);\n-        if (vehicles && vehicles.length > 0) {\n-            res.status(200).json(vehicles[0]);\n-        } else {\n-            res.status(404).send('Vehicle not found');\n-        }\n-    } catch (error) {\n-        console.error('Error retrieving vehicle details:', error);\n-        res.status(500).send('Error retrieving vehicle details');\n-    }\n-}\n+const getVehicleDetails = async (req, res) => {\n+    // Your existing code\n+};\n \n-async function listAppointments(req, res) {\n+const listAppointments = async (req, res) => {\n     try {\n-        const appointments = await fetchAppointments();\n-        res.status(200).json(appointments);\n+        const response = await tekmetricsApi.get('/appointments', {\n+            headers: {\n+                'Authorization': `Bearer ${req.headers.authorization.split(' ')[1]}`\n+            }\n+        });\n+        res.json(response.data);\n     } catch (error) {\n-        console.error('Error retrieving appointments:', error);\n-        res.status(500).send('Error retrieving appointments');\n+        console.error('Error fetching appointments:', error.message);\n+        res.status(500).json({ error: error.message });\n     }\n-}\n+};\n \n module.exports = { getCustomer, createNewVehicle, getVehicleDetails, listAppointments };\n"
                },
                {
                    "date": 1717898586674,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,29 +1,54 @@\n-const { tekmetricsApi } = require('../services/tekmetricService');\n+const { searchCustomer, createVehicle, searchVehicleByVin, listAppointments: fetchAppointments } = require('../services/tekmetricService');\n \n-const getCustomer = async (req, res) => {\n-    // Your existing code\n-};\n+async function getCustomer(req, res) {\n+    let { search } = req.query;\n+    try {\n+        const data = await searchCustomer(search);\n+        res.status(200).json(data);\n+    } catch (error) {\n+        console.error('Error retrieving customer data:', error);\n+        res.status(500).send('Error retrieving customer data');\n+    }\n+}\n \n-const createNewVehicle = async (req, res) => {\n-    // Your existing code\n-};\n+async function createNewVehicle(req, res) {\n+    const vehicleData = req.body;\n+    try {\n+        const response = await createVehicle(vehicleData);\n+        res.status(201).json(response);\n+    } catch (error) {\n+        console.error('Error creating vehicle:', error);\n+        res.status(500).send('Error creating vehicle');\n+    }\n+}\n \n-const getVehicleDetails = async (req, res) => {\n-    // Your existing code\n-};\n+async function getVehicleDetails(req, res) {\n+    const { vin } = req.query;\n+    try {\n+        const vehicles = await searchVehicleByVin(vin);\n+        if (vehicles && vehicles.length > 0) {\n+            res.status(200).json(vehicles[0]);\n+        } else {\n+            res.status(404).send('Vehicle not found');\n+        }\n+    } catch (error) {\n+        console.error('Error retrieving vehicle details:', error);\n+        res.status(500).send('Error retrieving vehicle details');\n+    }\n+}\n \n-const listAppointments = async (req, res) => {\n+async function listAppointments(req, res) {\n     try {\n-        const response = await tekmetricsApi.get('/appointments', {\n-            headers: {\n-                'Authorization': `Bearer ${req.headers.authorization.split(' ')[1]}`\n-            }\n-        });\n-        res.json(response.data);\n+        console.log('Fetching appointments...');\n+        const token = req.headers.authorization.split(' ')[1];\n+        console.log('Token:', token);\n+        const appointments = await fetchAppointments(token);\n+        console.log('Appointments:', appointments);\n+        res.status(200).json(appointments);\n     } catch (error) {\n-        console.error('Error fetching appointments:', error.message);\n-        res.status(500).json({ error: error.message });\n+        console.error('Error retrieving appointments:', error.message);\n+        res.status(500).send('Error retrieving appointments');\n     }\n-};\n+}\n \n module.exports = { getCustomer, createNewVehicle, getVehicleDetails, listAppointments };\n"
                },
                {
                    "date": 1717899217274,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,8 +46,13 @@\n         console.log('Appointments:', appointments);\n         res.status(200).json(appointments);\n     } catch (error) {\n         console.error('Error retrieving appointments:', error.message);\n+        if (error.response) {\n+            console.error('Error response data:', error.response.data);\n+            console.error('Error response status:', error.response.status);\n+            console.error('Error response headers:', error.response.headers);\n+        }\n         res.status(500).send('Error retrieving appointments');\n     }\n }\n \n"
                },
                {
                    "date": 1717899749469,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,5 @@\n+// backend/controllers/dataController.js\n const { searchCustomer, createVehicle, searchVehicleByVin, listAppointments: fetchAppointments } = require('../services/tekmetricService');\n \n async function getCustomer(req, res) {\n     let { search } = req.query;\n@@ -38,21 +39,12 @@\n }\n \n async function listAppointments(req, res) {\n     try {\n-        console.log('Fetching appointments...');\n-        const token = req.headers.authorization.split(' ')[1];\n-        console.log('Token:', token);\n-        const appointments = await fetchAppointments(token);\n-        console.log('Appointments:', appointments);\n+        const appointments = await fetchAppointments();\n         res.status(200).json(appointments);\n     } catch (error) {\n-        console.error('Error retrieving appointments:', error.message);\n-        if (error.response) {\n-            console.error('Error response data:', error.response.data);\n-            console.error('Error response status:', error.response.status);\n-            console.error('Error response headers:', error.response.headers);\n-        }\n+        console.error('Error retrieving appointments:', error);\n         res.status(500).send('Error retrieving appointments');\n     }\n }\n \n"
                }
            ],
            "date": 1717897809321,
            "name": "Commit-0",
            "content": "// backend/controllers/dataController.js\nconst axios = require('axios');\n\nconst listAppointments = async (req, res) => {\n    try {\n        const token = req.headers.authorization.split(' ')[1]; // Extract token from the Authorization header\n        const response = await axios.get('https://sandbox.tekmetric.com/api/v1/appointments', {\n            headers: {\n                'Authorization': `Bearer ${token}`\n            }\n        });\n        res.json(response.data);\n    } catch (error) {\n        console.error('Error fetching appointments:', error);\n        res.status(error.response ? error.response.status : 500).send(error.response ? error.response.data : 'Error fetching appointments');\n    }\n};\n\nmodule.exports = { listAppointments };\n"
        }
    ]
}