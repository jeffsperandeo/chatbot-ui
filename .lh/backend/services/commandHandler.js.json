{
    "sourceFile": "backend/services/commandHandler.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1717786546311,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1717889869614,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,34 +1,22 @@\n // backend/services/commandHandler.js\n \n-const {\n-    listRepairOrders,\n-    updateRepairOrder,\n-    listAppointments,\n-    listVehicles,\n-    // Add more service functions as needed\n-} = require('./tekmetricService');\n+const axios = require('axios');\n \n-async function commandHandler(parsedCommand) {\n-    const { action, details } = parsedCommand;\n+async function getVehicleDetails(vin) {\n+    const url = `https://sandbox.tekmetric.com/api/v1/vehicles?shop=238&vin=${vin}`;\n+    const token = '1c39b602-682c-4100-a7eb-029863bdd191'; // Replace with your actual token\n \n     try {\n-        switch (action) {\n-            case 'listRepairOrders':\n-                return await listRepairOrders();\n-            case 'updateRepairOrder':\n-                return await updateRepairOrder(details);\n-            case 'listAppointments':\n-                return await listAppointments();\n-            case 'listVehicles':\n-                return await listVehicles();\n-            // Add more cases as needed\n-            default:\n-                return { error: `Unknown action: ${action}` };\n-        }\n+        const response = await axios.get(url, {\n+            headers: {\n+                'Authorization': `Bearer ${token}`\n+            }\n+        });\n+        return response.data;\n     } catch (error) {\n-        console.error(`Error processing command \"${action}\":`, error.message);\n-        return { error: `Error processing command \"${action}\": ${error.message}` };\n+        console.error('Error fetching vehicle details:', error.message);\n+        throw error;\n     }\n }\n \n-module.exports = { commandHandler };\n+module.exports = { getVehicleDetails };\n"
                },
                {
                    "date": 1717890144043,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,22 +1,34 @@\n // backend/services/commandHandler.js\n \n-const axios = require('axios');\n+const {\n+    listRepairOrders,\n+    updateRepairOrder,\n+    listAppointments,\n+    listVehicles,\n+    // Add more service functions as needed\n+} = require('./tekmetricService');\n \n-async function getVehicleDetails(vin) {\n-    const url = `https://sandbox.tekmetric.com/api/v1/vehicles?shop=238&vin=${vin}`;\n-    const token = '1c39b602-682c-4100-a7eb-029863bdd191'; // Replace with your actual token\n+async function commandHandler(parsedCommand) {\n+    const { action, details } = parsedCommand;\n \n     try {\n-        const response = await axios.get(url, {\n-            headers: {\n-                'Authorization': `Bearer ${token}`\n-            }\n-        });\n-        return response.data;\n+        switch (action) {\n+            case 'listRepairOrders':\n+                return await listRepairOrders();\n+            case 'updateRepairOrder':\n+                return await updateRepairOrder(details);\n+            case 'listAppointments':\n+                return await listAppointments();\n+            case 'listVehicles':\n+                return await listVehicles();\n+            // Add more cases as needed\n+            default:\n+                return { error: `Unknown action: ${action}` };\n+        }\n     } catch (error) {\n-        console.error('Error fetching vehicle details:', error.message);\n-        throw error;\n+        console.error(`Error processing command \"${action}\":`, error.message);\n+        return { error: `Error processing command \"${action}\": ${error.message}` };\n     }\n }\n \n-module.exports = { getVehicleDetails };\n+module.exports = { commandHandler };\n"
                },
                {
                    "date": 1718133501369,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,4 @@\n-// backend/services/commandHandler.js\n-\n const {\n     listRepairOrders,\n     updateRepairOrder,\n     listAppointments,\n"
                }
            ],
            "date": 1717786546311,
            "name": "Commit-0",
            "content": "// backend/services/commandHandler.js\n\nconst {\n    listRepairOrders,\n    updateRepairOrder,\n    listAppointments,\n    listVehicles,\n    // Add more service functions as needed\n} = require('./tekmetricService');\n\nasync function commandHandler(parsedCommand) {\n    const { action, details } = parsedCommand;\n\n    try {\n        switch (action) {\n            case 'listRepairOrders':\n                return await listRepairOrders();\n            case 'updateRepairOrder':\n                return await updateRepairOrder(details);\n            case 'listAppointments':\n                return await listAppointments();\n            case 'listVehicles':\n                return await listVehicles();\n            // Add more cases as needed\n            default:\n                return { error: `Unknown action: ${action}` };\n        }\n    } catch (error) {\n        console.error(`Error processing command \"${action}\":`, error.message);\n        return { error: `Error processing command \"${action}\": ${error.message}` };\n    }\n}\n\nmodule.exports = { commandHandler };\n"
        }
    ]
}