{
    "sourceFile": "backend/services/tekmetricService.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 18,
            "patches": [
                {
                    "date": 1717796728073,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1717798411932,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,62 +1,43 @@\n // backend/services/tekmetricService.js\n+const axios = require('axios');\n+require('dotenv').config();\n \n-const axios = require('../utils/axiosConfig');\n+const apiUrl = process.env.TEKMETRIC_API_URL;\n+const apiKey = process.env.TEKMETRIC_API_KEY;\n \n-async function listRepairOrders() {\n-    try {\n-        const response = await axios.get('/repair-orders', {\n-            params: { shop: 238 }\n-        });\n-        return response.data;\n-    } catch (error) {\n-        console.error('Error listing repair orders:', error.message);\n-        throw error;\n+const tekmetricsApi = axios.create({\n+    baseURL: apiUrl,\n+    headers: {\n+        'Authorization': `Bearer ${apiKey}`,\n+        'Content-Type': 'application/json'\n     }\n-}\n+});\n \n-async function updateRepairOrder(details) {\n+async function searchCustomer(query) {\n     try {\n-        const [id,...rest] = details.split(' with ');\n-        const data = JSON.parse(rest.join(' '));\n-        const response = await axios.patch(`/repair-orders/${id}`, data);\n-        return response.data;\n-    } catch (error) {\n-        console.error('Error updating repair order:', error.message);\n-        throw error;\n-    }\n-}\n-\n-async function listAppointments() {\n-    try {\n-        const response = await axios.get('/appointments', {\n-            params: { shop: 238 }\n+        const response = await tekmetricsApi.get('/customers', {\n+            params: {\n+                shop: 238,\n+                search: query,\n+                page: 0,\n+                size: 100\n+            }\n         });\n         return response.data;\n     } catch (error) {\n-        console.error('Error listing appointments:', error.message);\n+        console.error('Error searching customer:', error);\n         throw error;\n     }\n }\n \n-async function listVehicles() {\n+async function createVehicle(vehicleData) {\n     try {\n\\ No newline at end of file\n-        const response = await axios.get('/vehicles', {\n-            params: {\n-                shop: 238,\n-                updatedDateStart: '2024-05-02T00:00:00Z',\n-                updatedDateEnd: '2024-05-02T23:59:59Z'\n-            }\n-        });\n+        const response = await tekmetricsApi.post('/vehicles', vehicleData);\n         return response.data;\n     } catch (error) {\n-        console.error('Error listing vehicles:', error.message);\n+        console.error('Error creating vehicle:', error);\n         throw error;\n     }\n }\n \n-module.exports = {\n-    listRepairOrders,\n-    updateRepairOrder,\n-    listAppointments,\n-    listVehicles,\n-};\n+module.exports = { tekmetricsApi, searchCustomer, createVehicle };\n"
                },
                {
                    "date": 1717798411976,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,5 +39,5 @@\n         throw error;\n     }\n }\n \n-module.exports = { tekmetricsApi, searchCustomer, createVehicle };\n\\ No newline at end of file\n+module.exports = { tekmetricsApi, searchCustomer, createVehicle };\n"
                },
                {
                    "date": 1717810804565,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,4 @@\n-// backend/services/tekmetricService.js\n const axios = require('axios');\n require('dotenv').config();\n \n const apiUrl = process.env.TEKMETRIC_API_URL;\n"
                },
                {
                    "date": 1717875538698,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,8 +21,9 @@\n                 page: 0,\n                 size: 100\n             }\n         });\n+        console.log('Response from /customers endpoint:', response.data);\n         return response.data;\n     } catch (error) {\n         console.error('Error searching customer:', error);\n         throw error;\n@@ -31,8 +32,9 @@\n \n async function createVehicle(vehicleData) {\n     try {\n         const response = await tekmetricsApi.post('/vehicles', vehicleData);\n+        console.log('Response from /vehicles endpoint:', response.data);\n         return response.data;\n     } catch (error) {\n         console.error('Error creating vehicle:', error);\n         throw error;\n"
                },
                {
                    "date": 1717898602987,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,8 @@\n                 page: 0,\n                 size: 100\n             }\n         });\n-        console.log('Response from /customers endpoint:', response.data);\n         return response.data;\n     } catch (error) {\n         console.error('Error searching customer:', error);\n         throw error;\n@@ -32,13 +31,38 @@\n \n async function createVehicle(vehicleData) {\n     try {\n         const response = await tekmetricsApi.post('/vehicles', vehicleData);\n-        console.log('Response from /vehicles endpoint:', response.data);\n         return response.data;\n     } catch (error) {\n         console.error('Error creating vehicle:', error);\n         throw error;\n     }\n }\n \n-module.exports = { tekmetricsApi, searchCustomer, createVehicle };\n+async function searchVehicleByVin(vin) {\n+    try {\n+        const response = await tekmetricsApi.get('/vehicles', {\n+            params: { vin }\n+        });\n+        return response.data;\n+    } catch (error) {\n+        console.error('Error searching vehicle by VIN:', error);\n+        throw error;\n+    }\n+}\n+\n+async function fetchAppointments(token) {\n+    try {\n+        const response = await tekmetricsApi.get('/appointments', {\n+            headers: {\n+                'Authorization': `Bearer ${token}`\n+            }\n+        });\n+        return response.data;\n+    } catch (error) {\n+        console.error('Error fetching appointments:', error);\n+        throw error;\n+    }\n+}\n+\n+module.exports = { searchCustomer, createVehicle, searchVehicleByVin, fetchAppointments };\n"
                },
                {
                    "date": 1717899761955,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,5 @@\n+// backend/services/tekmetricService.js\n const axios = require('axios');\n require('dotenv').config();\n \n const apiUrl = process.env.TEKMETRIC_API_URL;\n@@ -21,8 +22,9 @@\n                 page: 0,\n                 size: 100\n             }\n         });\n+        console.log('Response from /customers endpoint:', response.data);\n         return response.data;\n     } catch (error) {\n         console.error('Error searching customer:', error);\n         throw error;\n@@ -31,38 +33,30 @@\n \n async function createVehicle(vehicleData) {\n     try {\n         const response = await tekmetricsApi.post('/vehicles', vehicleData);\n+        console.log('Response from /vehicles endpoint:', response.data);\n         return response.data;\n     } catch (error) {\n         console.error('Error creating vehicle:', error);\n         throw error;\n     }\n }\n \n-async function searchVehicleByVin(vin) {\n+async function fetchAppointments() {\n     try {\n-        const response = await tekmetricsApi.get('/vehicles', {\n-            params: { vin }\n-        });\n-        return response.data;\n-    } catch (error) {\n-        console.error('Error searching vehicle by VIN:', error);\n-        throw error;\n-    }\n-}\n-\n-async function fetchAppointments(token) {\n-    try {\n         const response = await tekmetricsApi.get('/appointments', {\n-            headers: {\n-                'Authorization': `Bearer ${token}`\n+            params: {\n+                shop: 238,\n+                page: 0,\n+                size: 100\n             }\n         });\n+        console.log('Response from /appointments endpoint:', response.data);\n         return response.data;\n     } catch (error) {\n         console.error('Error fetching appointments:', error);\n         throw error;\n     }\n }\n \n-module.exports = { searchCustomer, createVehicle, searchVehicleByVin, fetchAppointments };\n+module.exports = { tekmetricsApi, searchCustomer, createVehicle, fetchAppointments };\n"
                },
                {
                    "date": 1718027679896,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,4 @@\n-// backend/services/tekmetricService.js\n const axios = require('axios');\n require('dotenv').config();\n \n const apiUrl = process.env.TEKMETRIC_API_URL;\n@@ -12,9 +11,9 @@\n         'Content-Type': 'application/json'\n     }\n });\n \n-async function searchCustomer(query) {\n+async function getCustomerDetails(query) {\n     try {\n         const response = await tekmetricsApi.get('/customers', {\n             params: {\n                 shop: 238,\n@@ -22,41 +21,35 @@\n                 page: 0,\n                 size: 100\n             }\n         });\n-        console.log('Response from /customers endpoint:', response.data);\n-        return response.data;\n+        console.log(`Raw response from Tekmetric API: ${JSON.stringify(response.data, null, 2)}`);\n+        return response.data.content;\n     } catch (error) {\n-        console.error('Error searching customer:', error);\n+        console.error('Error fetching customer details:', error.message);\n         throw error;\n     }\n }\n \n-async function createVehicle(vehicleData) {\n+async function createNewVehicle(vehicleData) {\n     try {\n         const response = await tekmetricsApi.post('/vehicles', vehicleData);\n-        console.log('Response from /vehicles endpoint:', response.data);\n+        console.log(`Vehicle created: ${JSON.stringify(response.data, null, 2)}`);\n         return response.data;\n     } catch (error) {\n-        console.error('Error creating vehicle:', error);\n+        console.error('Error creating vehicle:', error.message);\n         throw error;\n     }\n }\n \n-async function fetchAppointments() {\n+async function listAppointments() {\n     try {\n-        const response = await tekmetricsApi.get('/appointments', {\n-            params: {\n-                shop: 238,\n-                page: 0,\n-                size: 100\n-            }\n-        });\n-        console.log('Response from /appointments endpoint:', response.data);\n+        const response = await tekmetricsApi.get('/appointments');\n+        console.log(`Appointments response: ${JSON.stringify(response.data, null, 2)}`); // Add this line\n         return response.data;\n     } catch (error) {\n-        console.error('Error fetching appointments:', error);\n+        console.error('Error fetching appointments:', error.message); // Add this line\n         throw error;\n     }\n }\n \n-module.exports = { tekmetricsApi, searchCustomer, createVehicle, fetchAppointments };\n+module.exports = { getCustomerDetails, createNewVehicle, listAppointments };\n"
                },
                {
                    "date": 1718031442244,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,11 +40,13 @@\n         throw error;\n     }\n }\n \n-async function listAppointments() {\n+async function listAppointments(authToken) {\n     try {\n-        const response = await tekmetricsApi.get('/appointments');\n+        const response = await tekmetricsApi.get('/appointments', {\n+            headers: { 'Authorization': `Bearer ${authToken}` }\n+        });\n         console.log(`Appointments response: ${JSON.stringify(response.data, null, 2)}`); // Add this line\n         return response.data;\n     } catch (error) {\n         console.error('Error fetching appointments:', error.message); // Add this line\n"
                },
                {
                    "date": 1718032165768,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,8 +42,9 @@\n }\n \n async function listAppointments(authToken) {\n     try {\n+        console.log('Using authToken:', authToken); // Add this line\n         const response = await tekmetricsApi.get('/appointments', {\n             headers: { 'Authorization': `Bearer ${authToken}` }\n         });\n         console.log(`Appointments response: ${JSON.stringify(response.data, null, 2)}`); // Add this line\n"
                },
                {
                    "date": 1718034573057,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,8 +50,9 @@\n         console.log(`Appointments response: ${JSON.stringify(response.data, null, 2)}`); // Add this line\n         return response.data;\n     } catch (error) {\n         console.error('Error fetching appointments:', error.message); // Add this line\n+        console.error('Error details:', error.response ? error.response.data : error.message); // Add this line\n         throw error;\n     }\n }\n \n"
                },
                {
                    "date": 1718037757752,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,14 +1,12 @@\n const axios = require('axios');\n require('dotenv').config();\n \n const apiUrl = process.env.TEKMETRIC_API_URL;\n-const apiKey = process.env.TEKMETRIC_API_KEY;\n \n const tekmetricsApi = axios.create({\n     baseURL: apiUrl,\n     headers: {\n-        'Authorization': `Bearer ${apiKey}`,\n         'Content-Type': 'application/json'\n     }\n });\n \n@@ -44,9 +42,10 @@\n async function listAppointments(authToken) {\n     try {\n         console.log('Using authToken:', authToken); // Add this line\n         const response = await tekmetricsApi.get('/appointments', {\n-            headers: { 'Authorization': `Bearer ${authToken}` }\n+            headers: { 'Authorization': `Bearer ${authToken}` },\n+            params: { shop: 238 }\n         });\n         console.log(`Appointments response: ${JSON.stringify(response.data, null, 2)}`); // Add this line\n         return response.data;\n     } catch (error) {\n"
                },
                {
                    "date": 1718041557273,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,12 +1,14 @@\n const axios = require('axios');\n require('dotenv').config();\n \n const apiUrl = process.env.TEKMETRIC_API_URL;\n+const apiKey = process.env.TEKMETRIC_API_KEY;\n \n const tekmetricsApi = axios.create({\n     baseURL: apiUrl,\n     headers: {\n+        'Authorization': `Bearer ${apiKey}`,\n         'Content-Type': 'application/json'\n     }\n });\n \n@@ -42,10 +44,9 @@\n async function listAppointments(authToken) {\n     try {\n         console.log('Using authToken:', authToken); // Add this line\n         const response = await tekmetricsApi.get('/appointments', {\n-            headers: { 'Authorization': `Bearer ${authToken}` },\n-            params: { shop: 238 }\n+            headers: { 'Authorization': `Bearer ${authToken}` }\n         });\n         console.log(`Appointments response: ${JSON.stringify(response.data, null, 2)}`); // Add this line\n         return response.data;\n     } catch (error) {\n"
                },
                {
                    "date": 1718044941729,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,17 +42,17 @@\n }\n \n async function listAppointments(authToken) {\n     try {\n-        console.log('Using authToken:', authToken); // Add this line\n+        console.log('Using authToken:', authToken);\n         const response = await tekmetricsApi.get('/appointments', {\n             headers: { 'Authorization': `Bearer ${authToken}` }\n         });\n-        console.log(`Appointments response: ${JSON.stringify(response.data, null, 2)}`); // Add this line\n+        console.log(`Appointments response: ${JSON.stringify(response.data, null, 2)}`);\n         return response.data;\n     } catch (error) {\n-        console.error('Error fetching appointments:', error.message); // Add this line\n-        console.error('Error details:', error.response ? error.response.data : error.message); // Add this line\n+        console.error('Error fetching appointments:', error.message);\n+        console.error('Error details:', error.response ? error.response.data : error.message);\n         throw error;\n     }\n }\n \n"
                },
                {
                    "date": 1718274762552,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,5 @@\n+// tekmetricService.js\n const axios = require('axios');\n require('dotenv').config();\n \n const apiUrl = process.env.TEKMETRIC_API_URL;\n"
                },
                {
                    "date": 1718276992617,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,4 @@\n-// tekmetricService.js\n const axios = require('axios');\n require('dotenv').config();\n \n const apiUrl = process.env.TEKMETRIC_API_URL;\n"
                },
                {
                    "date": 1718278408442,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,59 +1,23 @@\n-const axios = require('axios');\n-require('dotenv').config();\n+function parseCommand(input) {\n+    const commandMappings = {\n+        \"Get vehicle details for VIN\": \"GET /tekmetrics/vehicles\",\n+        \"Add a new vehicle with details\": \"POST /tekmetrics/vehicles\",\n+        \"Update vehicle with ID\": \"PATCH /tekmetrics/vehicles/{id}\",\n+        \"List all jobs in the shop\": \"GET /tekmetrics/jobs\",\n+        \"Change status of job ID\": \"PATCH /tekmetrics/jobs/{id}\",\n+        \"Get customer details for ID\": \"GET /tekmetrics/customers\",\n+        \"What are my appointments today?\": \"GET /tekmetrics/appointments\"\n+    };\n \n-const apiUrl = process.env.TEKMETRIC_API_URL;\n-const apiKey = process.env.TEKMETRIC_API_KEY;\n-\n-const tekmetricsApi = axios.create({\n-    baseURL: apiUrl,\n-    headers: {\n-        'Authorization': `Bearer ${apiKey}`,\n-        'Content-Type': 'application/json'\n+    for (const [command, endpoint] of Object.entries(commandMappings)) {\n+        if (input.startsWith(command)) {\n+            console.log(`Command recognized: ${command}`);\n+            return { command, endpoint, details: input.replace(command, '').trim() };\n+        }\n     }\n-});\n \n-async function getCustomerDetails(query) {\n-    try {\n-        const response = await tekmetricsApi.get('/customers', {\n-            params: {\n-                shop: 238,\n-                search: query,\n-                page: 0,\n-                size: 100\n-            }\n-        });\n-        console.log(`Raw response from Tekmetric API: ${JSON.stringify(response.data, null, 2)}`);\n-        return response.data.content;\n-    } catch (error) {\n-        console.error('Error fetching customer details:', error.message);\n-        throw error;\n-    }\n+    console.log(`Command not recognized: ${input}`);\n+    return null;\n }\n \n-async function createNewVehicle(vehicleData) {\n-    try {\n-        const response = await tekmetricsApi.post('/vehicles', vehicleData);\n-        console.log(`Vehicle created: ${JSON.stringify(response.data, null, 2)}`);\n-        return response.data;\n-    } catch (error) {\n-        console.error('Error creating vehicle:', error.message);\n-        throw error;\n-    }\n-}\n-\n-async function listAppointments(authToken) {\n-    try {\n-        console.log('Using authToken:', authToken);\n-        const response = await tekmetricsApi.get('/appointments', {\n-            headers: { 'Authorization': `Bearer ${authToken}` }\n-        });\n-        console.log(`Appointments response: ${JSON.stringify(response.data, null, 2)}`);\n-        return response.data;\n-    } catch (error) {\n-        console.error('Error fetching appointments:', error.message);\n-        console.error('Error details:', error.response ? error.response.data : error.message);\n-        throw error;\n-    }\n-}\n-\n-module.exports = { getCustomerDetails, createNewVehicle, listAppointments };\n+module.exports = { parseCommand };\n"
                },
                {
                    "date": 1718279244951,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,23 +1,59 @@\n-function parseCommand(input) {\n-    const commandMappings = {\n-        \"Get vehicle details for VIN\": \"GET /tekmetrics/vehicles\",\n-        \"Add a new vehicle with details\": \"POST /tekmetrics/vehicles\",\n-        \"Update vehicle with ID\": \"PATCH /tekmetrics/vehicles/{id}\",\n-        \"List all jobs in the shop\": \"GET /tekmetrics/jobs\",\n-        \"Change status of job ID\": \"PATCH /tekmetrics/jobs/{id}\",\n-        \"Get customer details for ID\": \"GET /tekmetrics/customers\",\n-        \"What are my appointments today?\": \"GET /tekmetrics/appointments\"\n-    };\n+const axios = require('axios');\n+require('dotenv').config();\n \n-    for (const [command, endpoint] of Object.entries(commandMappings)) {\n-        if (input.startsWith(command)) {\n-            console.log(`Command recognized: ${command}`);\n-            return { command, endpoint, details: input.replace(command, '').trim() };\n-        }\n+const apiUrl = process.env.TEKMETRIC_API_URL;\n+const apiKey = process.env.TEKMETRIC_API_KEY;\n+\n+const tekmetricsApi = axios.create({\n+    baseURL: apiUrl,\n+    headers: {\n+        'Authorization': `Bearer ${apiKey}`,\n+        'Content-Type': 'application/json'\n     }\n+});\n \n-    console.log(`Command not recognized: ${input}`);\n-    return null;\n+async function getCustomerDetails(query) {\n+    try {\n+        const response = await tekmetricsApi.get('/customers', {\n+            params: {\n+                shop: 238,\n+                search: query,\n+                page: 0,\n+                size: 100\n+            }\n+        });\n+        console.log(`Raw response from Tekmetric API: ${JSON.stringify(response.data, null, 2)}`);\n+        return response.data.content;\n+    } catch (error) {\n+        console.error('Error fetching customer details:', error.message);\n+        throw error;\n+    }\n }\n \n-module.exports = { parseCommand };\n+async function createNewVehicle(vehicleData) {\n+    try {\n+        const response = await tekmetricsApi.post('/vehicles', vehicleData);\n+        console.log(`Vehicle created: ${JSON.stringify(response.data, null, 2)}`);\n+        return response.data;\n+    } catch (error) {\n+        console.error('Error creating vehicle:', error.message);\n+        throw error;\n+    }\n+}\n+\n+async function listAppointments(authToken) {\n+    try {\n+        console.log('Using authToken:', authToken);\n+        const response = await tekmetricsApi.get('/appointments', {\n+            headers: { 'Authorization': `Bearer ${authToken}` }\n+        });\n+        console.log(`Appointments response: ${JSON.stringify(response.data, null, 2)}`);\n+        return response.data;\n+    } catch (error) {\n+        console.error('Error fetching appointments:', error.message);\n+        console.error('Error details:', error.response ? error.response.data : error.message);\n+        throw error;\n+    }\n+}\n+\n+module.exports = { getCustomerDetails, createNewVehicle, listAppointments };\n"
                },
                {
                    "date": 1718282227399,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -55,5 +55,5 @@\n         throw error;\n     }\n }\n \n-module.exports = { getCustomerDetails, createNewVehicle, listAppointments };\n+module.exports = { getCustomerDetails, createNewVehicle, listAppointments, tekmetricsApi };\n"
                }
            ],
            "date": 1717796728073,
            "name": "Commit-0",
            "content": "// backend/services/tekmetricService.js\n\nconst axios = require('../utils/axiosConfig');\n\nasync function listRepairOrders() {\n    try {\n        const response = await axios.get('/repair-orders', {\n            params: { shop: 238 }\n        });\n        return response.data;\n    } catch (error) {\n        console.error('Error listing repair orders:', error.message);\n        throw error;\n    }\n}\n\nasync function updateRepairOrder(details) {\n    try {\n        const [id,...rest] = details.split(' with ');\n        const data = JSON.parse(rest.join(' '));\n        const response = await axios.patch(`/repair-orders/${id}`, data);\n        return response.data;\n    } catch (error) {\n        console.error('Error updating repair order:', error.message);\n        throw error;\n    }\n}\n\nasync function listAppointments() {\n    try {\n        const response = await axios.get('/appointments', {\n            params: { shop: 238 }\n        });\n        return response.data;\n    } catch (error) {\n        console.error('Error listing appointments:', error.message);\n        throw error;\n    }\n}\n\nasync function listVehicles() {\n    try {\n        const response = await axios.get('/vehicles', {\n            params: {\n                shop: 238,\n                updatedDateStart: '2024-05-02T00:00:00Z',\n                updatedDateEnd: '2024-05-02T23:59:59Z'\n            }\n        });\n        return response.data;\n    } catch (error) {\n        console.error('Error listing vehicles:', error.message);\n        throw error;\n    }\n}\n\nmodule.exports = {\n    listRepairOrders,\n    updateRepairOrder,\n    listAppointments,\n    listVehicles,\n};"
        }
    ]
}