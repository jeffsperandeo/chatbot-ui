{
    "sourceFile": "backend/utils/chatHandler.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 16,
            "patches": [
                {
                    "date": 1717794863892,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1717794913837,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,15 +24,23 @@\n }\n \n // Define API call functions\n async function getVehicleDetails(vin) {\n-    const response = await axios.get(`/tekmetrics/vehicles`, { params: { vin } });\n-    return response.data;\n+    try {\n+        const response = await axios.get('/tekmetrics/vehicles', { params: { vin } });\n+        return response.data;\n+    } catch (error) {\n+        return `Error fetching vehicle details: ${error.message}`;\n+    }\n }\n \n async function addNewVehicle(details) {\n-    const response = await axios.post(`/tekmetrics/vehicles`, details);\n-    return response.data;\n+    try {\n+        const response = await axios.post('/tekmetrics/vehicles', details);\n+        return response.data;\n+    } catch (error) {\n+        return `Error adding new vehicle: ${error.message}`;\n+    }\n }\n \n // Example usage\n const userInput = \"Get vehicle details for VIN 123456\";\n"
                },
                {
                    "date": 1717795406264,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,10 +1,9 @@\n-// ChatClient.js\n+// utils/chatHandler.js\n+import axios from 'axios';\n import { parseCommand } from './commandParser';\n-import axios from 'axios';\n \n-// Function to handle user input and trigger API calls\n-async function handleUserInput(input) {\n+export async function handleUserInput(input) {\n     const parsedCommand = parseCommand(input);\n \n     if (parsedCommand) {\n         const { command, endpoint, details } = parsedCommand;\n@@ -13,9 +12,18 @@\n             case \"Get vehicle details for VIN\":\n                 return await getVehicleDetails(details);\n             case \"Add a new vehicle with details\":\n                 return await addNewVehicle(details);\n-            // Add other cases as needed\n+            case \"Update vehicle with ID\":\n+                return await updateVehicle(details);\n+            case \"List all jobs in the shop\":\n+                return await listJobs();\n+            case \"Change status of job ID\":\n+                return await updateJobStatus(details);\n+            case \"Get customer details for ID\":\n+                return await getCustomerDetails(details);\n+            case \"What are my appointments today?\":\n+                return await listAppointments();\n             default:\n                 return \"Command not recognized.\";\n         }\n     } else {\n@@ -41,9 +49,52 @@\n         return `Error adding new vehicle: ${error.message}`;\n     }\n }\n \n-// Example usage\n-const userInput = \"Get vehicle details for VIN 123456\";\n-handleUserInput(userInput).then(response => {\n-    console.log(response);\n-});\n+async function updateVehicle(details) {\n+    const [id, ...restDetails] = details.split(' ');\n+    const updateDetails = restDetails.join(' ');\n+    try {\n+        const response = await axios.patch(`/tekmetrics/vehicles/${id}`, { updateDetails });\n+        return response.data;\n+    } catch (error) {\n+        return `Error updating vehicle: ${error.message}`;\n+    }\n+}\n+\n+async function listJobs() {\n+    try {\n+        const response = await axios.get('/tekmetrics/jobs');\n+        return response.data;\n+    } catch (error) {\n+        return `Error listing jobs: ${error.message}`;\n+    }\n+}\n+\n+async function updateJobStatus(details) {\n+    const [id, ...restDetails] = details.split(' ');\n+    const status = restDetails.join(' ');\n+    try {\n+        const response = await axios.patch(`/tekmetrics/jobs/${id}`, { status });\n+        return response.data;\n+    } catch (error) {\n+        return `Error updating job status: ${error.message}`;\n+    }\n+}\n+\n+async function getCustomerDetails(id) {\n+    try {\n+        const response = await axios.get(`/tekmetrics/customers/${id}`);\n+        return response.data;\n+    } catch (error) {\n+        return `Error fetching customer details: ${error.message}`;\n+    }\n+}\n+\n+async function listAppointments() {\n+    try {\n+        const response = await axios.get('/tekmetrics/appointments');\n+        return response.data;\n+    } catch (error) {\n+        return `Error listing appointments: ${error.message}`;\n+    }\n+}\n"
                },
                {
                    "date": 1717795456438,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n // utils/chatHandler.js\n-import axios from 'axios';\n+import axiosInstance from './axiosConfig';\n import { parseCommand } from './commandParser';\n \n export async function handleUserInput(input) {\n     const parsedCommand = parseCommand(input);\n@@ -12,18 +12,9 @@\n             case \"Get vehicle details for VIN\":\n                 return await getVehicleDetails(details);\n             case \"Add a new vehicle with details\":\n                 return await addNewVehicle(details);\n-            case \"Update vehicle with ID\":\n-                return await updateVehicle(details);\n-            case \"List all jobs in the shop\":\n-                return await listJobs();\n-            case \"Change status of job ID\":\n-                return await updateJobStatus(details);\n-            case \"Get customer details for ID\":\n-                return await getCustomerDetails(details);\n-            case \"What are my appointments today?\":\n-                return await listAppointments();\n+            // Add other cases as needed\n             default:\n                 return \"Command not recognized.\";\n         }\n     } else {\n@@ -33,68 +24,21 @@\n \n // Define API call functions\n async function getVehicleDetails(vin) {\n     try {\n-        const response = await axios.get('/tekmetrics/vehicles', { params: { vin } });\n+        const response = await axiosInstance.get('/tekmetrics/vehicles', { params: { vin } });\n         return response.data;\n     } catch (error) {\n         return `Error fetching vehicle details: ${error.message}`;\n     }\n }\n \n async function addNewVehicle(details) {\n     try {\n-        const response = await axios.post('/tekmetrics/vehicles', details);\n+        const response = await axiosInstance.post('/tekmetrics/vehicles', details);\n         return response.data;\n     } catch (error) {\n         return `Error adding new vehicle: ${error.message}`;\n     }\n }\n \n-async function updateVehicle(details) {\n-    const [id, ...restDetails] = details.split(' ');\n-    const updateDetails = restDetails.join(' ');\n-    try {\n-        const response = await axios.patch(`/tekmetrics/vehicles/${id}`, { updateDetails });\n-        return response.data;\n-    } catch (error) {\n-        return `Error updating vehicle: ${error.message}`;\n-    }\n-}\n-\n-async function listJobs() {\n-    try {\n-        const response = await axios.get('/tekmetrics/jobs');\n-        return response.data;\n-    } catch (error) {\n-        return `Error listing jobs: ${error.message}`;\n-    }\n-}\n-\n-async function updateJobStatus(details) {\n-    const [id, ...restDetails] = details.split(' ');\n-    const status = restDetails.join(' ');\n-    try {\n-        const response = await axios.patch(`/tekmetrics/jobs/${id}`, { status });\n-        return response.data;\n-    } catch (error) {\n-        return `Error updating job status: ${error.message}`;\n-    }\n-}\n-\n-async function getCustomerDetails(id) {\n-    try {\n-        const response = await axios.get(`/tekmetrics/customers/${id}`);\n-        return response.data;\n-    } catch (error) {\n-        return `Error fetching customer details: ${error.message}`;\n-    }\n-}\n-\n-async function listAppointments() {\n-    try {\n-        const response = await axios.get('/tekmetrics/appointments');\n-        return response.data;\n-    } catch (error) {\n-        return `Error listing appointments: ${error.message}`;\n-    }\n-}\n+// Add other functions as needed\n"
                },
                {
                    "date": 1717795491432,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,18 @@\n             case \"Get vehicle details for VIN\":\n                 return await getVehicleDetails(details);\n             case \"Add a new vehicle with details\":\n                 return await addNewVehicle(details);\n-            // Add other cases as needed\n+            case \"Update vehicle with ID\":\n+                return await updateVehicle(details);\n+            case \"List all jobs in the shop\":\n+                return await listJobs();\n+            case \"Change status of job ID\":\n+                return await updateJobStatus(details);\n+            case \"Get customer details for ID\":\n+                return await getCustomerDetails(details);\n+            case \"What are my appointments today?\":\n+                return await listAppointments();\n             default:\n                 return \"Command not recognized.\";\n         }\n     } else {\n@@ -40,5 +49,52 @@\n         return `Error adding new vehicle: ${error.message}`;\n     }\n }\n \n-// Add other functions as needed\n+async function updateVehicle(details) {\n+    const [id, ...restDetails] = details.split(' ');\n+    const updateDetails = restDetails.join(' ');\n+    try {\n+        const response = await axiosInstance.patch(`/tekmetrics/vehicles/${id}`, { updateDetails });\n+        return response.data;\n+    } catch (error) {\n+        return `Error updating vehicle: ${error.message}`;\n+    }\n+}\n+\n+async function listJobs() {\n+    try {\n+        const response = await axiosInstance.get('/tekmetrics/jobs');\n+        return response.data;\n+    } catch (error) {\n+        return `Error listing jobs: ${error.message}`;\n+    }\n+}\n+\n+async function updateJobStatus(details) {\n+    const [id, ...restDetails] = details.split(' ');\n+    const status = restDetails.join(' ');\n+    try {\n+        const response = await axiosInstance.patch(`/tekmetrics/jobs/${id}`, { status });\n+        return response.data;\n+    } catch (error) {\n+        return `Error updating job status: ${error.message}`;\n+    }\n+}\n+\n+async function getCustomerDetails(id) {\n+    try {\n+        const response = await axiosInstance.get(`/tekmetrics/customers/${id}`);\n+        return response.data;\n+    } catch (error) {\n+        return `Error fetching customer details: ${error.message}`;\n+    }\n+}\n+\n+async function listAppointments() {\n+    try {\n+        const response = await axiosInstance.get('/tekmetrics/appointments');\n+        return response.data;\n+    } catch (error) {\n+        return `Error listing appointments: ${error.message}`;\n+    }\n+}\n"
                },
                {
                    "date": 1717795560564,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,38 +33,38 @@\n \n // Define API call functions\n async function getVehicleDetails(vin) {\n     try {\n-        const response = await axiosInstance.get('/tekmetrics/vehicles', { params: { vin } });\n+        const response = await axiosInstance.get('/api/v1/vehicles', { params: { vin } });\n         return response.data;\n     } catch (error) {\n         return `Error fetching vehicle details: ${error.message}`;\n     }\n }\n \n async function addNewVehicle(details) {\n     try {\n-        const response = await axiosInstance.post('/tekmetrics/vehicles', details);\n+        const response = await axiosInstance.post('/api/v1/vehicles', JSON.parse(details));\n         return response.data;\n     } catch (error) {\n         return `Error adding new vehicle: ${error.message}`;\n     }\n }\n \n async function updateVehicle(details) {\n     const [id, ...restDetails] = details.split(' ');\n-    const updateDetails = restDetails.join(' ');\n+    const updateDetails = JSON.parse(restDetails.join(' '));\n     try {\n-        const response = await axiosInstance.patch(`/tekmetrics/vehicles/${id}`, { updateDetails });\n+        const response = await axiosInstance.patch(`/api/v1/vehicles/${id}`, updateDetails);\n         return response.data;\n     } catch (error) {\n         return `Error updating vehicle: ${error.message}`;\n     }\n }\n \n async function listJobs() {\n     try {\n-        const response = await axiosInstance.get('/tekmetrics/jobs');\n+        const response = await axiosInstance.get('/api/v1/canned-jobs');\n         return response.data;\n     } catch (error) {\n         return `Error listing jobs: ${error.message}`;\n     }\n@@ -73,27 +73,27 @@\n async function updateJobStatus(details) {\n     const [id, ...restDetails] = details.split(' ');\n     const status = restDetails.join(' ');\n     try {\n-        const response = await axiosInstance.patch(`/tekmetrics/jobs/${id}`, { status });\n+        const response = await axiosInstance.patch(`/api/v1/jobs/${id}`, { status });\n         return response.data;\n     } catch (error) {\n         return `Error updating job status: ${error.message}`;\n     }\n }\n \n async function getCustomerDetails(id) {\n     try {\n-        const response = await axiosInstance.get(`/tekmetrics/customers/${id}`);\n+        const response = await axiosInstance.get(`/api/v1/customers/${id}`);\n         return response.data;\n     } catch (error) {\n         return `Error fetching customer details: ${error.message}`;\n     }\n }\n \n async function listAppointments() {\n     try {\n-        const response = await axiosInstance.get('/tekmetrics/appointments');\n+        const response = await axiosInstance.get('/api/v1/appointments');\n         return response.data;\n     } catch (error) {\n         return `Error listing appointments: ${error.message}`;\n     }\n"
                },
                {
                    "date": 1717796471778,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,100 +1,41 @@\n-// utils/chatHandler.js\n-import axiosInstance from './axiosConfig';\n+import axios from 'axios';\n import { parseCommand } from './commandParser';\n \n export async function handleUserInput(input) {\n-    const parsedCommand = parseCommand(input);\n+  const parsedCommand = parseCommand(input);\n \n-    if (parsedCommand) {\n-        const { command, endpoint, details } = parsedCommand;\n+  if (parsedCommand) {\n+    const { command, endpoint, details } = parsedCommand;\n \n-        switch (command) {\n-            case \"Get vehicle details for VIN\":\n-                return await getVehicleDetails(details);\n-            case \"Add a new vehicle with details\":\n-                return await addNewVehicle(details);\n-            case \"Update vehicle with ID\":\n-                return await updateVehicle(details);\n-            case \"List all jobs in the shop\":\n-                return await listJobs();\n-            case \"Change status of job ID\":\n-                return await updateJobStatus(details);\n-            case \"Get customer details for ID\":\n-                return await getCustomerDetails(details);\n-            case \"What are my appointments today?\":\n-                return await listAppointments();\n-            default:\n-                return \"Command not recognized.\";\n-        }\n-    } else {\n-        return \"I'm sorry, I don't understand that command.\";\n+    switch (command) {\n+      case \"Get vehicle details for VIN\":\n+        return await getVehicleDetails(details);\n+      case \"Add a new vehicle with details\":\n+        return await addNewVehicle(details);\n+      // Add other cases as needed\n+      default:\n+        return \"Command not recognized.\";\n     }\n+  } else {\n+    return \"I'm sorry, I don't understand that command.\";\n+  }\n }\n \n // Define API call functions\n async function getVehicleDetails(vin) {\n-    try {\n-        const response = await axiosInstance.get('/api/v1/vehicles', { params: { vin } });\n-        return response.data;\n-    } catch (error) {\n-        return `Error fetching vehicle details: ${error.message}`;\n-    }\n+  try {\n+    const response = await axios.get(`/api/tekmetrics/vehicles`, { params: { vin } });\n+    return response.data;\n+  } catch (error) {\n+    return `Error: ${error.response ? error.response.data : error.message}`;\n+  }\n }\n \n async function addNewVehicle(details) {\n-    try {\n-        const response = await axiosInstance.post('/api/v1/vehicles', JSON.parse(details));\n-        return response.data;\n-    } catch (error) {\n-        return `Error adding new vehicle: ${error.message}`;\n-    }\n+  try {\n+    const response = await axios.post(`/api/tekmetrics/vehicles`, details);\n+    return response.data;\n+  } catch (error) {\n+    return `Error: ${error.response ? error.response.data : error.message}`;\n+  }\n }\n-\n-async function updateVehicle(details) {\n-    const [id, ...restDetails] = details.split(' ');\n-    const updateDetails = JSON.parse(restDetails.join(' '));\n-    try {\n-        const response = await axiosInstance.patch(`/api/v1/vehicles/${id}`, updateDetails);\n-        return response.data;\n-    } catch (error) {\n-        return `Error updating vehicle: ${error.message}`;\n-    }\n-}\n-\n-async function listJobs() {\n-    try {\n-        const response = await axiosInstance.get('/api/v1/canned-jobs');\n-        return response.data;\n-    } catch (error) {\n-        return `Error listing jobs: ${error.message}`;\n-    }\n-}\n-\n-async function updateJobStatus(details) {\n-    const [id, ...restDetails] = details.split(' ');\n-    const status = restDetails.join(' ');\n-    try {\n-        const response = await axiosInstance.patch(`/api/v1/jobs/${id}`, { status });\n-        return response.data;\n-    } catch (error) {\n-        return `Error updating job status: ${error.message}`;\n-    }\n-}\n-\n-async function getCustomerDetails(id) {\n-    try {\n-        const response = await axiosInstance.get(`/api/v1/customers/${id}`);\n-        return response.data;\n-    } catch (error) {\n-        return `Error fetching customer details: ${error.message}`;\n-    }\n-}\n-\n-async function listAppointments() {\n-    try {\n-        const response = await axiosInstance.get('/api/v1/appointments');\n-        return response.data;\n-    } catch (error) {\n-        return `Error listing appointments: ${error.message}`;\n-    }\n-}\n"
                },
                {
                    "date": 1717796559732,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,41 +1,100 @@\n-import axios from 'axios';\n+// utils/chatHandler.js\n+import axios from './axiosConfig'; // Import the configured axios instance\n import { parseCommand } from './commandParser';\n \n export async function handleUserInput(input) {\n-  const parsedCommand = parseCommand(input);\n+    const parsedCommand = parseCommand(input);\n \n-  if (parsedCommand) {\n-    const { command, endpoint, details } = parsedCommand;\n+    if (parsedCommand) {\n+        const { command, endpoint, details } = parsedCommand;\n \n-    switch (command) {\n-      case \"Get vehicle details for VIN\":\n-        return await getVehicleDetails(details);\n-      case \"Add a new vehicle with details\":\n-        return await addNewVehicle(details);\n-      // Add other cases as needed\n-      default:\n-        return \"Command not recognized.\";\n+        switch (command) {\n+            case \"Get vehicle details for VIN\":\n+                return await getVehicleDetails(details);\n+            case \"Add a new vehicle with details\":\n+                return await addNewVehicle(details);\n+            case \"Update vehicle with ID\":\n+                return await updateVehicle(details);\n+            case \"List all jobs in the shop\":\n+                return await listJobs();\n+            case \"Change status of job ID\":\n+                return await updateJobStatus(details);\n+            case \"Get customer details for ID\":\n+                return await getCustomerDetails(details);\n+            case \"What are my appointments today?\":\n+                return await listAppointments();\n+            default:\n+                return \"Command not recognized.\";\n+        }\n+    } else {\n+        return \"I'm sorry, I don't understand that command.\";\n     }\n-  } else {\n-    return \"I'm sorry, I don't understand that command.\";\n-  }\n }\n \n // Define API call functions\n async function getVehicleDetails(vin) {\n-  try {\n-    const response = await axios.get(`/api/tekmetrics/vehicles`, { params: { vin } });\n-    return response.data;\n-  } catch (error) {\n-    return `Error: ${error.response ? error.response.data : error.message}`;\n-  }\n+    try {\n+        const response = await axios.get('/tekmetrics/vehicles', { params: { vin } });\n+        return response.data;\n+    } catch (error) {\n+        return `Error fetching vehicle details: ${error.message}`;\n+    }\n }\n \n async function addNewVehicle(details) {\n-  try {\n-    const response = await axios.post(`/api/tekmetrics/vehicles`, details);\n-    return response.data;\n-  } catch (error) {\n-    return `Error: ${error.response ? error.response.data : error.message}`;\n-  }\n+    try {\n+        const response = await axios.post('/tekmetrics/vehicles', details);\n+        return response.data;\n+    } catch (error) {\n+        return `Error adding new vehicle: ${error.message}`;\n+    }\n }\n+\n+async function updateVehicle(details) {\n+    const [id, ...restDetails] = details.split(' ');\n+    const updateDetails = restDetails.join(' ');\n+    try {\n+        const response = await axios.patch(`/tekmetrics/vehicles/${id}`, { updateDetails });\n+        return response.data;\n+    } catch (error) {\n+        return `Error updating vehicle: ${error.message}`;\n+    }\n+}\n+\n+async function listJobs() {\n+    try {\n+        const response = await axios.get('/tekmetrics/jobs');\n+        return response.data;\n+    } catch (error) {\n+        return `Error listing jobs: ${error.message}`;\n+    }\n+}\n+\n+async function updateJobStatus(details) {\n+    const [id, ...restDetails] = details.split(' ');\n+    const status = restDetails.join(' ');\n+    try {\n+        const response = await axios.patch(`/tekmetrics/jobs/${id}`, { status });\n+        return response.data;\n+    } catch (error) {\n+        return `Error updating job status: ${error.message}`;\n+    }\n+}\n+\n+async function getCustomerDetails(id) {\n+    try {\n+        const response = await axios.get(`/tekmetrics/customers/${id}`);\n+        return response.data;\n+    } catch (error) {\n+        return `Error fetching customer details: ${error.message}`;\n+    }\n+}\n+\n+async function listAppointments() {\n+    try {\n+        const response = await axios.get('/tekmetrics/appointments');\n+        return response.data;\n+    } catch (error) {\n+        return `Error listing appointments: ${error.message}`;\n+    }\n+}\n"
                },
                {
                    "date": 1717798431122,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n // utils/chatHandler.js\n-import axios from './axiosConfig'; // Import the configured axios instance\n-import { parseCommand } from './commandParser';\n+const { searchCustomer, createVehicle, tekmetricsApi } = require('../services/tekmetricService');\n+const { parseCommand } = require('./commandParser');\n \n export async function handleUserInput(input) {\n     const parsedCommand = parseCommand(input);\n \n@@ -33,18 +33,18 @@\n \n // Define API call functions\n async function getVehicleDetails(vin) {\n     try {\n-        const response = await axios.get('/tekmetrics/vehicles', { params: { vin } });\n+        const response = await tekmetricsApi.get('/vehicles', { params: { vin } });\n         return response.data;\n     } catch (error) {\n         return `Error fetching vehicle details: ${error.message}`;\n     }\n }\n \n async function addNewVehicle(details) {\n     try {\n-        const response = await axios.post('/tekmetrics/vehicles', details);\n+        const response = await tekmetricsApi.post('/vehicles', details);\n         return response.data;\n     } catch (error) {\n         return `Error adding new vehicle: ${error.message}`;\n     }\n@@ -53,18 +53,18 @@\n async function updateVehicle(details) {\n     const [id, ...restDetails] = details.split(' ');\n     const updateDetails = restDetails.join(' ');\n     try {\n-        const response = await axios.patch(`/tekmetrics/vehicles/${id}`, { updateDetails });\n+        const response = await tekmetricsApi.patch(`/vehicles/${id}`, { updateDetails });\n         return response.data;\n     } catch (error) {\n         return `Error updating vehicle: ${error.message}`;\n     }\n }\n \n async function listJobs() {\n     try {\n-        const response = await axios.get('/tekmetrics/jobs');\n+        const response = await tekmetricsApi.get('/jobs');\n         return response.data;\n     } catch (error) {\n         return `Error listing jobs: ${error.message}`;\n     }\n@@ -73,27 +73,27 @@\n async function updateJobStatus(details) {\n     const [id, ...restDetails] = details.split(' ');\n     const status = restDetails.join(' ');\n     try {\n-        const response = await axios.patch(`/tekmetrics/jobs/${id}`, { status });\n+        const response = await tekmetricsApi.patch(`/jobs/${id}`, { status });\n         return response.data;\n     } catch (error) {\n         return `Error updating job status: ${error.message}`;\n     }\n }\n \n async function getCustomerDetails(id) {\n     try {\n-        const response = await axios.get(`/tekmetrics/customers/${id}`);\n+        const response = await tekmetricsApi.get(`/customers/${id}`);\n         return response.data;\n     } catch (error) {\n         return `Error fetching customer details: ${error.message}`;\n     }\n }\n \n async function listAppointments() {\n     try {\n-        const response = await axios.get('/tekmetrics/appointments');\n+        const response = await tekmetricsApi.get('/appointments');\n         return response.data;\n     } catch (error) {\n         return `Error listing appointments: ${error.message}`;\n     }\n"
                },
                {
                    "date": 1717807189671,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,8 @@\n-// utils/chatHandler.js\n const { searchCustomer, createVehicle, tekmetricsApi } = require('../services/tekmetricService');\n const { parseCommand } = require('./commandParser');\n \n-export async function handleUserInput(input) {\n+async function handleUserInput(input) {\n     const parsedCommand = parseCommand(input);\n \n     if (parsedCommand) {\n         const { command, endpoint, details } = parsedCommand;\n@@ -97,4 +96,6 @@\n     } catch (error) {\n         return `Error listing appointments: ${error.message}`;\n     }\n }\n+\n+module.exports = { handleUserInput };\n"
                },
                {
                    "date": 1717889887723,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,6 @@\n-const { searchCustomer, createVehicle, tekmetricsApi } = require('../services/tekmetricService');\n+// backend/utils/chatHandler.js\n+const { commandHandler } = require('../services/commandHandler');\n const { parseCommand } = require('./commandParser');\n \n async function handleUserInput(input) {\n     const parsedCommand = parseCommand(input);\n@@ -8,94 +9,26 @@\n         const { command, endpoint, details } = parsedCommand;\n \n         switch (command) {\n             case \"Get vehicle details for VIN\":\n-                return await getVehicleDetails(details);\n+                return await commandHandler({ action: 'getVehicleDetails', details });\n             case \"Add a new vehicle with details\":\n-                return await addNewVehicle(details);\n+                return await commandHandler({ action: 'createNewVehicle', details });\n             case \"Update vehicle with ID\":\n-                return await updateVehicle(details);\n+                return await commandHandler({ action: 'updateVehicle', details });\n             case \"List all jobs in the shop\":\n-                return await listJobs();\n+                return await commandHandler({ action: 'listRepairOrders' });\n             case \"Change status of job ID\":\n-                return await updateJobStatus(details);\n+                return await commandHandler({ action: 'updateRepairOrder', details });\n             case \"Get customer details for ID\":\n-                return await getCustomerDetails(details);\n+                return await commandHandler({ action: 'getCustomerDetails', details });\n             case \"What are my appointments today?\":\n-                return await listAppointments();\n+                return await commandHandler({ action: 'listAppointments' });\n             default:\n                 return \"Command not recognized.\";\n         }\n     } else {\n         return \"I'm sorry, I don't understand that command.\";\n     }\n }\n \n-// Define API call functions\n-async function getVehicleDetails(vin) {\n-    try {\n-        const response = await tekmetricsApi.get('/vehicles', { params: { vin } });\n-        return response.data;\n-    } catch (error) {\n-        return `Error fetching vehicle details: ${error.message}`;\n-    }\n-}\n-\n-async function addNewVehicle(details) {\n-    try {\n-        const response = await tekmetricsApi.post('/vehicles', details);\n-        return response.data;\n-    } catch (error) {\n-        return `Error adding new vehicle: ${error.message}`;\n-    }\n-}\n-\n-async function updateVehicle(details) {\n-    const [id, ...restDetails] = details.split(' ');\n-    const updateDetails = restDetails.join(' ');\n-    try {\n-        const response = await tekmetricsApi.patch(`/vehicles/${id}`, { updateDetails });\n-        return response.data;\n-    } catch (error) {\n-        return `Error updating vehicle: ${error.message}`;\n-    }\n-}\n-\n-async function listJobs() {\n-    try {\n-        const response = await tekmetricsApi.get('/jobs');\n-        return response.data;\n-    } catch (error) {\n-        return `Error listing jobs: ${error.message}`;\n-    }\n-}\n-\n-async function updateJobStatus(details) {\n-    const [id, ...restDetails] = details.split(' ');\n-    const status = restDetails.join(' ');\n-    try {\n-        const response = await tekmetricsApi.patch(`/jobs/${id}`, { status });\n-        return response.data;\n-    } catch (error) {\n-        return `Error updating job status: ${error.message}`;\n-    }\n-}\n-\n-async function getCustomerDetails(id) {\n-    try {\n-        const response = await tekmetricsApi.get(`/customers/${id}`);\n-        return response.data;\n-    } catch (error) {\n-        return `Error fetching customer details: ${error.message}`;\n-    }\n-}\n-\n-async function listAppointments() {\n-    try {\n-        const response = await tekmetricsApi.get('/appointments');\n-        return response.data;\n-    } catch (error) {\n-        return `Error listing appointments: ${error.message}`;\n-    }\n-}\n-\n module.exports = { handleUserInput };\n"
                },
                {
                    "date": 1717890132928,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,5 @@\n-// backend/utils/chatHandler.js\n-const { commandHandler } = require('../services/commandHandler');\n+const { searchCustomer, createVehicle, tekmetricsApi } = require('../services/tekmetricService');\n const { parseCommand } = require('./commandParser');\n \n async function handleUserInput(input) {\n     const parsedCommand = parseCommand(input);\n@@ -9,26 +8,94 @@\n         const { command, endpoint, details } = parsedCommand;\n \n         switch (command) {\n             case \"Get vehicle details for VIN\":\n-                return await commandHandler({ action: 'getVehicleDetails', details });\n+                return await getVehicleDetails(details);\n             case \"Add a new vehicle with details\":\n-                return await commandHandler({ action: 'createNewVehicle', details });\n+                return await addNewVehicle(details);\n             case \"Update vehicle with ID\":\n-                return await commandHandler({ action: 'updateVehicle', details });\n+                return await updateVehicle(details);\n             case \"List all jobs in the shop\":\n-                return await commandHandler({ action: 'listRepairOrders' });\n+                return await listJobs();\n             case \"Change status of job ID\":\n-                return await commandHandler({ action: 'updateRepairOrder', details });\n+                return await updateJobStatus(details);\n             case \"Get customer details for ID\":\n-                return await commandHandler({ action: 'getCustomerDetails', details });\n+                return await getCustomerDetails(details);\n             case \"What are my appointments today?\":\n-                return await commandHandler({ action: 'listAppointments' });\n+                return await listAppointments();\n             default:\n                 return \"Command not recognized.\";\n         }\n     } else {\n         return \"I'm sorry, I don't understand that command.\";\n     }\n }\n \n+// Define API call functions\n+async function getVehicleDetails(vin) {\n+    try {\n+        const response = await tekmetricsApi.get('/vehicles', { params: { vin } });\n+        return response.data;\n+    } catch (error) {\n+        return `Error fetching vehicle details: ${error.message}`;\n+    }\n+}\n+\n+async function addNewVehicle(details) {\n+    try {\n+        const response = await tekmetricsApi.post('/vehicles', details);\n+        return response.data;\n+    } catch (error) {\n+        return `Error adding new vehicle: ${error.message}`;\n+    }\n+}\n+\n+async function updateVehicle(details) {\n+    const [id, ...restDetails] = details.split(' ');\n+    const updateDetails = restDetails.join(' ');\n+    try {\n+        const response = await tekmetricsApi.patch(`/vehicles/${id}`, { updateDetails });\n+        return response.data;\n+    } catch (error) {\n+        return `Error updating vehicle: ${error.message}`;\n+    }\n+}\n+\n+async function listJobs() {\n+    try {\n+        const response = await tekmetricsApi.get('/jobs');\n+        return response.data;\n+    } catch (error) {\n+        return `Error listing jobs: ${error.message}`;\n+    }\n+}\n+\n+async function updateJobStatus(details) {\n+    const [id, ...restDetails] = details.split(' ');\n+    const status = restDetails.join(' ');\n+    try {\n+        const response = await tekmetricsApi.patch(`/jobs/${id}`, { status });\n+        return response.data;\n+    } catch (error) {\n+        return `Error updating job status: ${error.message}`;\n+    }\n+}\n+\n+async function getCustomerDetails(id) {\n+    try {\n+        const response = await tekmetricsApi.get(`/customers/${id}`);\n+        return response.data;\n+    } catch (error) {\n+        return `Error fetching customer details: ${error.message}`;\n+    }\n+}\n+\n+async function listAppointments() {\n+    try {\n+        const response = await tekmetricsApi.get('/appointments');\n+        return response.data;\n+    } catch (error) {\n+        return `Error listing appointments: ${error.message}`;\n+    }\n+}\n+\n module.exports = { handleUserInput };\n"
                },
                {
                    "date": 1717891244041,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,10 +31,11 @@\n }\n \n // Define API call functions\n async function getVehicleDetails(vin) {\n+    const url = `https://sandbox.tekmetric.com/api/v1/vehicles?shop=238&vin=${vin}`;\n     try {\n-        const response = await tekmetricsApi.get('/vehicles', { params: { vin } });\n+        const response = await tekmetricsApi.get(url);\n         return response.data;\n     } catch (error) {\n         return `Error fetching vehicle details: ${error.message}`;\n     }\n"
                },
                {
                    "date": 1717892054489,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,28 +1,33 @@\n const { searchCustomer, createVehicle, tekmetricsApi } = require('../services/tekmetricService');\n const { parseCommand } = require('./commandParser');\n+const { getContext } = require('./redisClient');\n \n-async function handleUserInput(input) {\n+async function handleUserInput(input, userId) {\n     const parsedCommand = parseCommand(input);\n \n     if (parsedCommand) {\n         const { command, endpoint, details } = parsedCommand;\n \n+        // Retrieve the token from Redis\n+        const context = await getContext(userId);\n+        const token = context.token;\n+\n         switch (command) {\n             case \"Get vehicle details for VIN\":\n-                return await getVehicleDetails(details);\n+                return await getVehicleDetails(details, token);\n             case \"Add a new vehicle with details\":\n-                return await addNewVehicle(details);\n+                return await addNewVehicle(details, token);\n             case \"Update vehicle with ID\":\n-                return await updateVehicle(details);\n+                return await updateVehicle(details, token);\n             case \"List all jobs in the shop\":\n-                return await listJobs();\n+                return await listJobs(token);\n             case \"Change status of job ID\":\n-                return await updateJobStatus(details);\n+                return await updateJobStatus(details, token);\n             case \"Get customer details for ID\":\n-                return await getCustomerDetails(details);\n+                return await getCustomerDetails(details, token);\n             case \"What are my appointments today?\":\n-                return await listAppointments();\n+                return await listAppointments(token);\n             default:\n                 return \"Command not recognized.\";\n         }\n     } else {\n@@ -30,70 +35,98 @@\n     }\n }\n \n // Define API call functions\n-async function getVehicleDetails(vin) {\n+async function getVehicleDetails(vin, token) {\n     const url = `https://sandbox.tekmetric.com/api/v1/vehicles?shop=238&vin=${vin}`;\n     try {\n-        const response = await tekmetricsApi.get(url);\n+        const response = await tekmetricsApi.get(url, {\n+            headers: {\n+                'Authorization': `Bearer ${token}`\n+            }\n+        });\n         return response.data;\n     } catch (error) {\n         return `Error fetching vehicle details: ${error.message}`;\n     }\n }\n \n-async function addNewVehicle(details) {\n+async function addNewVehicle(details, token) {\n     try {\n-        const response = await tekmetricsApi.post('/vehicles', details);\n+        const response = await tekmetricsApi.post('/vehicles', details, {\n+            headers: {\n+                'Authorization': `Bearer ${token}`\n+            }\n+        });\n         return response.data;\n     } catch (error) {\n         return `Error adding new vehicle: ${error.message}`;\n     }\n }\n \n-async function updateVehicle(details) {\n+async function updateVehicle(details, token) {\n     const [id, ...restDetails] = details.split(' ');\n     const updateDetails = restDetails.join(' ');\n     try {\n-        const response = await tekmetricsApi.patch(`/vehicles/${id}`, { updateDetails });\n+        const response = await tekmetricsApi.patch(`/vehicles/${id}`, { updateDetails }, {\n+            headers: {\n+                'Authorization': `Bearer ${token}`\n+            }\n+        });\n         return response.data;\n     } catch (error) {\n         return `Error updating vehicle: ${error.message}`;\n     }\n }\n \n-async function listJobs() {\n+async function listJobs(token) {\n     try {\n-        const response = await tekmetricsApi.get('/jobs');\n+        const response = await tekmetricsApi.get('/jobs', {\n+            headers: {\n+                'Authorization': `Bearer ${token}`\n+            }\n+        });\n         return response.data;\n     } catch (error) {\n         return `Error listing jobs: ${error.message}`;\n     }\n }\n \n-async function updateJobStatus(details) {\n+async function updateJobStatus(details, token) {\n     const [id, ...restDetails] = details.split(' ');\n     const status = restDetails.join(' ');\n     try {\n-        const response = await tekmetricsApi.patch(`/jobs/${id}`, { status });\n+        const response = await tekmetricsApi.patch(`/jobs/${id}`, { status }, {\n+            headers: {\n+                'Authorization': `Bearer ${token}`\n+            }\n+        });\n         return response.data;\n     } catch (error) {\n         return `Error updating job status: ${error.message}`;\n     }\n }\n \n-async function getCustomerDetails(id) {\n+async function getCustomerDetails(id, token) {\n     try {\n-        const response = await tekmetricsApi.get(`/customers/${id}`);\n+        const response = await tekmetricsApi.get(`/customers/${id}`, {\n+            headers: {\n+                'Authorization': `Bearer ${token}`\n+            }\n+        });\n         return response.data;\n     } catch (error) {\n         return `Error fetching customer details: ${error.message}`;\n     }\n }\n \n-async function listAppointments() {\n+async function listAppointments(token) {\n     try {\n-        const response = await tekmetricsApi.get('/appointments');\n+        const response = await tekmetricsApi.get('/appointments', {\n+            headers: {\n+                'Authorization': `Bearer ${token}`\n+            }\n+        });\n         return response.data;\n     } catch (error) {\n         return `Error listing appointments: ${error.message}`;\n     }\n"
                },
                {
                    "date": 1717892236181,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,102 @@\n+const { searchCustomer, createVehicle, tekmetricsApi } = require('../services/tekmetricService');\n+const { parseCommand } = require('./commandParser');\n+\n+async function handleUserInput(input) {\n+    const parsedCommand = parseCommand(input);\n+\n+    if (parsedCommand) {\n+        const { command, endpoint, details } = parsedCommand;\n+\n+        switch (command) {\n+            case \"Get vehicle details for VIN\":\n+                return await getVehicleDetails(details);\n+            case \"Add a new vehicle with details\":\n+                return await addNewVehicle(details);\n+            case \"Update vehicle with ID\":\n+                return await updateVehicle(details);\n+            case \"List all jobs in the shop\":\n+                return await listJobs();\n+            case \"Change status of job ID\":\n+                return await updateJobStatus(details);\n+            case \"Get customer details for ID\":\n+                return await getCustomerDetails(details);\n+            case \"What are my appointments today?\":\n+                return await listAppointments();\n+            default:\n+                return \"Command not recognized.\";\n+        }\n+    } else {\n+        return \"I'm sorry, I don't understand that command.\";\n+    }\n+}\n+\n+// Define API call functions\n+async function getVehicleDetails(vin) {\n+    const url = `https://sandbox.tekmetric.com/api/v1/vehicles?shop=238&vin=${vin}`;\n+    try {\n+        const response = await tekmetricsApi.get(url);\n+        return response.data;\n+    } catch (error) {\n+        return `Error fetching vehicle details: ${error.message}`;\n+    }\n+}\n+\n+async function addNewVehicle(details) {\n+    try {\n+        const response = await tekmetricsApi.post('/vehicles', details);\n+        return response.data;\n+    } catch (error) {\n+        return `Error adding new vehicle: ${error.message}`;\n+    }\n+}\n+\n+async function updateVehicle(details) {\n+    const [id, ...restDetails] = details.split(' ');\n+    const updateDetails = restDetails.join(' ');\n+    try {\n+        const response = await tekmetricsApi.patch(`/vehicles/${id}`, { updateDetails });\n+        return response.data;\n+    } catch (error) {\n+        return `Error updating vehicle: ${error.message}`;\n+    }\n+}\n+\n+async function listJobs() {\n+    try {\n+        const response = await tekmetricsApi.get('/jobs');\n+        return response.data;\n+    } catch (error) {\n+        return `Error listing jobs: ${error.message}`;\n+    }\n+}\n+\n+async function updateJobStatus(details) {\n+    const [id, ...restDetails] = details.split(' ');\n+    const status = restDetails.join(' ');\n+    try {\n+        const response = await tekmetricsApi.patch(`/jobs/${id}`, { status });\n+        return response.data;\n+    } catch (error) {\n+        return `Error updating job status: ${error.message}`;\n+    }\n+}\n+\n+async function getCustomerDetails(id) {\n+    try {\n+        const response = await tekmetricsApi.get(`/customers/${id}`);\n+        return response.data;\n+    } catch (error) {\n+        return `Error fetching customer details: ${error.message}`;\n+    }\n+}\n+\n+async function listAppointments() {\n+    try {\n+        const response = await tekmetricsApi.get('/appointments');\n+        return response.data;\n+    } catch (error) {\n+        return `Error listing appointments: ${error.message}`;\n+    }\n+}\n+\n+module.exports = { handleUserInput };\n"
                },
                {
                    "date": 1717892591884,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,28 +1,28 @@\n const { searchCustomer, createVehicle, tekmetricsApi } = require('../services/tekmetricService');\n const { parseCommand } = require('./commandParser');\n \n-async function handleUserInput(input) {\n+async function handleUserInput(input, userId, authToken) {\n     const parsedCommand = parseCommand(input);\n \n     if (parsedCommand) {\n         const { command, endpoint, details } = parsedCommand;\n \n         switch (command) {\n             case \"Get vehicle details for VIN\":\n-                return await getVehicleDetails(details);\n+                return await getVehicleDetails(details, authToken);\n             case \"Add a new vehicle with details\":\n-                return await addNewVehicle(details);\n+                return await addNewVehicle(details, authToken);\n             case \"Update vehicle with ID\":\n-                return await updateVehicle(details);\n+                return await updateVehicle(details, authToken);\n             case \"List all jobs in the shop\":\n-                return await listJobs();\n+                return await listJobs(authToken);\n             case \"Change status of job ID\":\n-                return await updateJobStatus(details);\n+                return await updateJobStatus(details, authToken);\n             case \"Get customer details for ID\":\n-                return await getCustomerDetails(details);\n+                return await getCustomerDetails(details, authToken);\n             case \"What are my appointments today?\":\n-                return await listAppointments();\n+                return await listAppointments(authToken);\n             default:\n                 return \"Command not recognized.\";\n         }\n     } else {\n@@ -30,204 +30,83 @@\n     }\n }\n \n // Define API call functions\n-async function getVehicleDetails(vin) {\n-    const url = `https://sandbox.tekmetric.com/api/v1/vehicles?shop=238&vin=${vin}`;\n+async function getVehicleDetails(vin, authToken) {\n     try {\n-        const response = await tekmetricsApi.get(url);\n-        return response.data;\n-    } catch (error) {\n-        return `Error fetching vehicle details: ${error.message}`;\n-    }\n-}\n-\n-async function addNewVehicle(details) {\n-    try {\n-        const response = await tekmetricsApi.post('/vehicles', details);\n-        return response.data;\n-    } catch (error) {\n-        return `Error adding new vehicle: ${error.message}`;\n-    }\n-}\n-\n-async function updateVehicle(details) {\n-    const [id, ...restDetails] = details.split(' ');\n-    const updateDetails = restDetails.join(' ');\n-    try {\n-        const response = await tekmetricsApi.patch(`/vehicles/${id}`, { updateDetails });\n-        return response.data;\n-    } catch (error) {\n-        return `Error updating vehicle: ${error.message}`;\n-    }\n-}\n-\n-async function listJobs() {\n-    try {\n-        const response = await tekmetricsApi.get('/jobs');\n-        return response.data;\n-    } catch (error) {\n-        return `Error listing jobs: ${error.message}`;\n-    }\n-}\n-\n-async function updateJobStatus(details) {\n-    const [id, ...restDetails] = details.split(' ');\n-    const status = restDetails.join(' ');\n-    try {\n-        const response = await tekmetricsApi.patch(`/jobs/${id}`, { status });\n-        return response.data;\n-    } catch (error) {\n-        return `Error updating job status: ${error.message}`;\n-    }\n-}\n-\n-async function getCustomerDetails(id) {\n-    try {\n-        const response = await tekmetricsApi.get(`/customers/${id}`);\n-        return response.data;\n-    } catch (error) {\n-        return `Error fetching customer details: ${error.message}`;\n-    }\n-}\n-\n-async function listAppointments() {\n-    try {\n-        const response = await tekmetricsApi.get('/appointments');\n-        return response.data;\n-    } catch (error) {\n-        return `Error listing appointments: ${error.message}`;\n-    }\n-}\n-\n-module.exports = { handleUserInput };\n-const { searchCustomer, createVehicle, tekmetricsApi } = require('../services/tekmetricService');\n-const { parseCommand } = require('./commandParser');\n-const { getContext } = require('./redisClient');\n-\n-async function handleUserInput(input, userId) {\n-    const parsedCommand = parseCommand(input);\n-\n-    if (parsedCommand) {\n-        const { command, endpoint, details } = parsedCommand;\n-\n-        // Retrieve the token from Redis\n-        const context = await getContext(userId);\n-        const token = context.token;\n-\n-        switch (command) {\n-            case \"Get vehicle details for VIN\":\n-                return await getVehicleDetails(details, token);\n-            case \"Add a new vehicle with details\":\n-                return await addNewVehicle(details, token);\n-            case \"Update vehicle with ID\":\n-                return await updateVehicle(details, token);\n-            case \"List all jobs in the shop\":\n-                return await listJobs(token);\n-            case \"Change status of job ID\":\n-                return await updateJobStatus(details, token);\n-            case \"Get customer details for ID\":\n-                return await getCustomerDetails(details, token);\n-            case \"What are my appointments today?\":\n-                return await listAppointments(token);\n-            default:\n-                return \"Command not recognized.\";\n-        }\n-    } else {\n-        return \"I'm sorry, I don't understand that command.\";\n-    }\n-}\n-\n-// Define API call functions\n-async function getVehicleDetails(vin, token) {\n-    const url = `https://sandbox.tekmetric.com/api/v1/vehicles?shop=238&vin=${vin}`;\n-    try {\n-        const response = await tekmetricsApi.get(url, {\n-            headers: {\n-                'Authorization': `Bearer ${token}`\n-            }\n+        const response = await tekmetricsApi.get('/vehicles', { \n+            params: { vin },\n+            headers: { 'Authorization': `Bearer ${authToken}` }\n         });\n         return response.data;\n     } catch (error) {\n         return `Error fetching vehicle details: ${error.message}`;\n     }\n }\n \n-async function addNewVehicle(details, token) {\n+async function addNewVehicle(details, authToken) {\n     try {\n         const response = await tekmetricsApi.post('/vehicles', details, {\n-            headers: {\n-                'Authorization': `Bearer ${token}`\n-            }\n+            headers: { 'Authorization': `Bearer ${authToken}` }\n         });\n         return response.data;\n     } catch (error) {\n         return `Error adding new vehicle: ${error.message}`;\n     }\n }\n \n-async function updateVehicle(details, token) {\n+async function updateVehicle(details, authToken) {\n     const [id, ...restDetails] = details.split(' ');\n     const updateDetails = restDetails.join(' ');\n     try {\n         const response = await tekmetricsApi.patch(`/vehicles/${id}`, { updateDetails }, {\n-            headers: {\n-                'Authorization': `Bearer ${token}`\n-            }\n+            headers: { 'Authorization': `Bearer ${authToken}` }\n         });\n         return response.data;\n     } catch (error) {\n         return `Error updating vehicle: ${error.message}`;\n     }\n }\n \n-async function listJobs(token) {\n+async function listJobs(authToken) {\n     try {\n         const response = await tekmetricsApi.get('/jobs', {\n-            headers: {\n-                'Authorization': `Bearer ${token}`\n-            }\n+            headers: { 'Authorization': `Bearer ${authToken}` }\n         });\n         return response.data;\n     } catch (error) {\n         return `Error listing jobs: ${error.message}`;\n     }\n }\n \n-async function updateJobStatus(details, token) {\n+async function updateJobStatus(details, authToken) {\n     const [id, ...restDetails] = details.split(' ');\n     const status = restDetails.join(' ');\n     try {\n         const response = await tekmetricsApi.patch(`/jobs/${id}`, { status }, {\n-            headers: {\n-                'Authorization': `Bearer ${token}`\n-            }\n+            headers: { 'Authorization': `Bearer ${authToken}` }\n         });\n         return response.data;\n     } catch (error) {\n         return `Error updating job status: ${error.message}`;\n     }\n }\n \n-async function getCustomerDetails(id, token) {\n+async function getCustomerDetails(id, authToken) {\n     try {\n         const response = await tekmetricsApi.get(`/customers/${id}`, {\n-            headers: {\n-                'Authorization': `Bearer ${token}`\n-            }\n+            headers: { 'Authorization': `Bearer ${authToken}` }\n         });\n         return response.data;\n     } catch (error) {\n         return `Error fetching customer details: ${error.message}`;\n     }\n }\n \n-async function listAppointments(token) {\n+async function listAppointments(authToken) {\n     try {\n         const response = await tekmetricsApi.get('/appointments', {\n-            headers: {\n-                'Authorization': `Bearer ${token}`\n-            }\n+            headers: { 'Authorization': `Bearer ${authToken}` }\n         });\n         return response.data;\n     } catch (error) {\n         return `Error listing appointments: ${error.message}`;\n"
                },
                {
                    "date": 1717894770321,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,9 +32,9 @@\n \n // Define API call functions\n async function getVehicleDetails(vin, authToken) {\n     try {\n-        const response = await tekmetricsApi.get('/vehicles', { \n+        const response = await tekmetricsApi.get('/vehicles', {\n             params: { vin },\n             headers: { 'Authorization': `Bearer ${authToken}` }\n         });\n         return response.data;\n"
                }
            ],
            "date": 1717794863892,
            "name": "Commit-0",
            "content": "// ChatClient.js\nimport { parseCommand } from './commandParser';\nimport axios from 'axios';\n\n// Function to handle user input and trigger API calls\nasync function handleUserInput(input) {\n    const parsedCommand = parseCommand(input);\n\n    if (parsedCommand) {\n        const { command, endpoint, details } = parsedCommand;\n\n        switch (command) {\n            case \"Get vehicle details for VIN\":\n                return await getVehicleDetails(details);\n            case \"Add a new vehicle with details\":\n                return await addNewVehicle(details);\n            // Add other cases as needed\n            default:\n                return \"Command not recognized.\";\n        }\n    } else {\n        return \"I'm sorry, I don't understand that command.\";\n    }\n}\n\n// Define API call functions\nasync function getVehicleDetails(vin) {\n    const response = await axios.get(`/tekmetrics/vehicles`, { params: { vin } });\n    return response.data;\n}\n\nasync function addNewVehicle(details) {\n    const response = await axios.post(`/tekmetrics/vehicles`, details);\n    return response.data;\n}\n\n// Example usage\nconst userInput = \"Get vehicle details for VIN 123456\";\nhandleUserInput(userInput).then(response => {\n    console.log(response);\n});\n"
        }
    ]
}