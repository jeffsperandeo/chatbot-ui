{
    "sourceFile": "backend/utils/commandParser.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 5,
            "patches": [
                {
                    "date": 1717786483876,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1717794845014,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,62 +1,20 @@\n-// backend/utils/commandParser.js\n-\n-function parseCommand(input) {\n-    const commandMapping = {\n-        \"create a new vehicle\": \"createVehicle\",\n-        \"update vehicle details\": \"updateVehicle\",\n-        \"get vehicle details\": \"getVehicleDetails\",\n-        \"list all vehicles\": \"listVehicles\",\n-        \"create a new customer\": \"createCustomer\",\n-        \"update customer details\": \"updateCustomer\",\n-        \"get customer details\": \"getCustomerDetails\",\n-        \"list all customers\": \"listCustomers\",\n-        \"create a repair order\": \"createRepairOrder\",\n-        \"update repair order\": \"updateRepairOrder\",\n-        \"get repair order details\": \"getRepairOrderDetails\",\n-        \"list all repair orders\": \"listRepairOrders\",\n-        \"get job details\": \"getJobDetails\",\n-        \"update job\": \"updateJob\",\n-        \"list all jobs\": \"listJobs\",\n-        \"create an appointment\": \"createAppointment\",\n-        \"update appointment\": \"updateAppointment\",\n-        \"get appointment details\": \"getAppointmentDetails\",\n-        \"list all appointments\": \"listAppointments\",\n-        \"list all employees\": \"listEmployees\",\n-        // Add more commands as needed\n+// commandParser.js\n+export function parseCommand(input) {\n+    const commandMappings = {\n+        \"Get vehicle details for VIN\": \"GET /tekmetrics/vehicles\",\n+        \"Add a new vehicle with details\": \"POST /tekmetrics/vehicles\",\n+        \"Update vehicle with ID\": \"PATCH /tekmetrics/vehicles/{id}\",\n+        \"List all jobs in the shop\": \"GET /tekmetrics/jobs\",\n+        \"Change status of job ID\": \"PATCH /tekmetrics/jobs/{id}\",\n+        \"Get customer details for ID\": \"GET /tekmetrics/customers\",\n+        \"What are my appointments today?\": \"GET /tekmetrics/appointments\"\n     };\n \n-    const lowerInput = input.toLowerCase();\n-\n-    for (const [key, value] of Object.entries(commandMapping)) {\n-        if (lowerInput.startsWith(key)) {\n-            const detailsStr = input.slice(key.length).trim();\n-            let details = null;\n-\n-            if (detailsStr.startsWith(\"with details\")) {\n-                const jsonStr = detailsStr.slice(\"with details\".length).trim();\n-                try {\n-                    details = JSON.parse(jsonStr);\n-                } catch (e) {\n-                    console.error(`Error parsing JSON: ${e.message}`);\n-                    return { error: `Invalid JSON format: ${e.message}` };\n-                }\n-            } else if (detailsStr.startsWith(\"with\")) {\n-                const jsonStr = detailsStr.slice(\"with\".length).trim();\n-                try {\n-                    details = JSON.parse(jsonStr);\n-                } catch (e) {\n-                    console.error(`Error parsing JSON: ${e.message}`);\n-                    return { error: `Invalid JSON format: ${e.message}` };\n-                }\n-            } else {\n-                details = detailsStr;\n-            }\n-\n-            return { command: key, action: value, details };\n+    for (const [command, endpoint] of Object.entries(commandMappings)) {\n+        if (input.startsWith(command)) {\n+            return { command, endpoint, details: input.replace(command, '').trim() };\n         }\n     }\n \n     return null;\n }\n-\n-module.exports = { parseCommand };\n"
                },
                {
                    "date": 1717795382933,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-// commandParser.js\n+// utils/commandParser.js\n export function parseCommand(input) {\n     const commandMappings = {\n         \"Get vehicle details for VIN\": \"GET /tekmetrics/vehicles\",\n         \"Add a new vehicle with details\": \"POST /tekmetrics/vehicles\",\n"
                },
                {
                    "date": 1717795541689,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,14 +1,14 @@\n // utils/commandParser.js\n export function parseCommand(input) {\n     const commandMappings = {\n-        \"Get vehicle details for VIN\": \"GET /tekmetrics/vehicles\",\n-        \"Add a new vehicle with details\": \"POST /tekmetrics/vehicles\",\n-        \"Update vehicle with ID\": \"PATCH /tekmetrics/vehicles/{id}\",\n-        \"List all jobs in the shop\": \"GET /tekmetrics/jobs\",\n-        \"Change status of job ID\": \"PATCH /tekmetrics/jobs/{id}\",\n-        \"Get customer details for ID\": \"GET /tekmetrics/customers\",\n-        \"What are my appointments today?\": \"GET /tekmetrics/appointments\"\n+        \"Get vehicle details for VIN\": \"GET /api/v1/vehicles\",\n+        \"Add a new vehicle with details\": \"POST /api/v1/vehicles\",\n+        \"Update vehicle with ID\": \"PATCH /api/v1/vehicles/{id}\",\n+        \"List all jobs in the shop\": \"GET /api/v1/canned-jobs\",\n+        \"Change status of job ID\": \"PATCH /api/v1/jobs/{id}\",\n+        \"Get customer details for ID\": \"GET /api/v1/customers\",\n+        \"What are my appointments today?\": \"GET /api/v1/appointments\"\n     };\n \n     for (const [command, endpoint] of Object.entries(commandMappings)) {\n         if (input.startsWith(command)) {\n"
                },
                {
                    "date": 1717796450846,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,20 +1,20 @@\n-// utils/commandParser.js\n export function parseCommand(input) {\n     const commandMappings = {\n-        \"Get vehicle details for VIN\": \"GET /api/v1/vehicles\",\n-        \"Add a new vehicle with details\": \"POST /api/v1/vehicles\",\n-        \"Update vehicle with ID\": \"PATCH /api/v1/vehicles/{id}\",\n-        \"List all jobs in the shop\": \"GET /api/v1/canned-jobs\",\n-        \"Change status of job ID\": \"PATCH /api/v1/jobs/{id}\",\n-        \"Get customer details for ID\": \"GET /api/v1/customers\",\n-        \"What are my appointments today?\": \"GET /api/v1/appointments\"\n+      \"Get vehicle details for VIN\": \"GET /tekmetrics/vehicles\",\n+      \"Add a new vehicle with details\": \"POST /tekmetrics/vehicles\",\n+      \"Update vehicle with ID\": \"PATCH /tekmetrics/vehicles/{id}\",\n+      \"List all jobs in the shop\": \"GET /tekmetrics/jobs\",\n+      \"Change status of job ID\": \"PATCH /tekmetrics/jobs/{id}\",\n+      \"Get customer details for ID\": \"GET /tekmetrics/customers\",\n+      \"What are my appointments today?\": \"GET /tekmetrics/appointments\"\n     };\n-\n+  \n     for (const [command, endpoint] of Object.entries(commandMappings)) {\n-        if (input.startsWith(command)) {\n-            return { command, endpoint, details: input.replace(command, '').trim() };\n-        }\n+      if (input.startsWith(command)) {\n+        return { command, endpoint, details: input.replace(command, '').trim() };\n+      }\n     }\n-\n+  \n     return null;\n-}\n+  }\n+  \n\\ No newline at end of file\n"
                },
                {
                    "date": 1717806831594,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,20 +1,22 @@\n-export function parseCommand(input) {\n+// backend/utils/commandParser.js\n+function parseCommand(input) {\n     const commandMappings = {\n-      \"Get vehicle details for VIN\": \"GET /tekmetrics/vehicles\",\n-      \"Add a new vehicle with details\": \"POST /tekmetrics/vehicles\",\n-      \"Update vehicle with ID\": \"PATCH /tekmetrics/vehicles/{id}\",\n-      \"List all jobs in the shop\": \"GET /tekmetrics/jobs\",\n-      \"Change status of job ID\": \"PATCH /tekmetrics/jobs/{id}\",\n-      \"Get customer details for ID\": \"GET /tekmetrics/customers\",\n-      \"What are my appointments today?\": \"GET /tekmetrics/appointments\"\n+        \"Get vehicle details for VIN\": \"GET /tekmetrics/vehicles\",\n+        \"Add a new vehicle with details\": \"POST /tekmetrics/vehicles\",\n+        \"Update vehicle with ID\": \"PATCH /tekmetrics/vehicles/{id}\",\n+        \"List all jobs in the shop\": \"GET /tekmetrics/jobs\",\n+        \"Change status of job ID\": \"PATCH /tekmetrics/jobs/{id}\",\n+        \"Get customer details for ID\": \"GET /tekmetrics/customers\",\n+        \"What are my appointments today?\": \"GET /tekmetrics/appointments\"\n     };\n-  \n\\ No newline at end of file\n+\n     for (const [command, endpoint] of Object.entries(commandMappings)) {\n-      if (input.startsWith(command)) {\n-        return { command, endpoint, details: input.replace(command, '').trim() };\n-      }\n+        if (input.startsWith(command)) {\n+            return { command, endpoint, details: input.replace(command, '').trim() };\n+        }\n     }\n-  \n+\n     return null;\n-  }\n-  \n+}\n+\n+module.exports = { parseCommand };\n"
                }
            ],
            "date": 1717786483876,
            "name": "Commit-0",
            "content": "// backend/utils/commandParser.js\n\nfunction parseCommand(input) {\n    const commandMapping = {\n        \"create a new vehicle\": \"createVehicle\",\n        \"update vehicle details\": \"updateVehicle\",\n        \"get vehicle details\": \"getVehicleDetails\",\n        \"list all vehicles\": \"listVehicles\",\n        \"create a new customer\": \"createCustomer\",\n        \"update customer details\": \"updateCustomer\",\n        \"get customer details\": \"getCustomerDetails\",\n        \"list all customers\": \"listCustomers\",\n        \"create a repair order\": \"createRepairOrder\",\n        \"update repair order\": \"updateRepairOrder\",\n        \"get repair order details\": \"getRepairOrderDetails\",\n        \"list all repair orders\": \"listRepairOrders\",\n        \"get job details\": \"getJobDetails\",\n        \"update job\": \"updateJob\",\n        \"list all jobs\": \"listJobs\",\n        \"create an appointment\": \"createAppointment\",\n        \"update appointment\": \"updateAppointment\",\n        \"get appointment details\": \"getAppointmentDetails\",\n        \"list all appointments\": \"listAppointments\",\n        \"list all employees\": \"listEmployees\",\n        // Add more commands as needed\n    };\n\n    const lowerInput = input.toLowerCase();\n\n    for (const [key, value] of Object.entries(commandMapping)) {\n        if (lowerInput.startsWith(key)) {\n            const detailsStr = input.slice(key.length).trim();\n            let details = null;\n\n            if (detailsStr.startsWith(\"with details\")) {\n                const jsonStr = detailsStr.slice(\"with details\".length).trim();\n                try {\n                    details = JSON.parse(jsonStr);\n                } catch (e) {\n                    console.error(`Error parsing JSON: ${e.message}`);\n                    return { error: `Invalid JSON format: ${e.message}` };\n                }\n            } else if (detailsStr.startsWith(\"with\")) {\n                const jsonStr = detailsStr.slice(\"with\".length).trim();\n                try {\n                    details = JSON.parse(jsonStr);\n                } catch (e) {\n                    console.error(`Error parsing JSON: ${e.message}`);\n                    return { error: `Invalid JSON format: ${e.message}` };\n                }\n            } else {\n                details = detailsStr;\n            }\n\n            return { command: key, action: value, details };\n        }\n    }\n\n    return null;\n}\n\nmodule.exports = { parseCommand };\n"
        }
    ]
}