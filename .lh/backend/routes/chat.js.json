{
    "sourceFile": "backend/routes/chat.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1718279951938,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1718279951938,
            "name": "Commit-0",
            "content": "const { handleUserInput } = require('../utils/chatHandler');\n\nexport async function POST(request) {\n  const json = await request.json();\n  const { chatSettings, messages, userId, authToken } = json;\n\n  const lastMessage = messages[messages.length - 1].content;\n\n  // Check for commands and handle them\n  const commandResponse = await handleUserInput(lastMessage, userId, authToken);\n  if (commandResponse) {\n    return new Response(JSON.stringify({ message: commandResponse }), { status: 200 });\n  }\n\n  // If no command, proceed with OpenAI chat completion\n  const response = await openai.chat.completions.create({\n    model: chatSettings.model,\n    messages,\n    temperature: chatSettings.temperature,\n    max_tokens: 4096,\n    stream: true,\n  });\n\n  const stream = OpenAIStream(response);\n  return new StreamingTextResponse(stream);\n}\n"
        }
    ]
}